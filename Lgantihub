-- Instances: 281 | Scripts: 0 | Modules: 1
local G2L = {};

-- ServerStorage.GantengLib
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["IgnoreGuiInset"] = true;
G2L["1"]["Enabled"] = false;
G2L["1"]["ScreenInsets"] = Enum.ScreenInsets.DeviceSafeInsets;
G2L["1"]["Name"] = [[GantengLib]];
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
G2L["1"]["ResetOnSpawn"] = false;

-- ServerStorage.GantengLib.DropShadowHolder
G2L["2"] = Instance.new("Frame", G2L["1"]);
G2L["2"]["ZIndex"] = 0;
G2L["2"]["BorderSizePixel"] = 0;
G2L["2"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["2"]["BackgroundTransparency"] = 1;
G2L["2"]["Size"] = UDim2.new(0, 506, 0, 296);
G2L["2"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
G2L["2"]["Name"] = [[DropShadowHolder]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame
G2L["3"] = Instance.new("Frame", G2L["2"]);
G2L["3"]["BorderSizePixel"] = 0;
G2L["3"]["BackgroundColor3"] = Color3.fromRGB(11, 11, 11);
G2L["3"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["3"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["3"]["ClipsDescendants"] = true;
G2L["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
G2L["3"]["Name"] = [[MainFrame]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.UICorner
G2L["4"] = Instance.new("UICorner", G2L["3"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.SideBar
G2L["5"] = Instance.new("Frame", G2L["3"]);
G2L["5"]["BorderSizePixel"] = 0;
G2L["5"]["BackgroundColor3"] = Color3.fromRGB(27, 27, 27);
G2L["5"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["5"]["BackgroundTransparency"] = 0.20000000298023224;
G2L["5"]["Size"] = UDim2.new(0.2806324064731598, 0, 1, 0);
G2L["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5"]["Position"] = UDim2.new(0.1403162032365799, 0, 0.5, 0);
G2L["5"]["Name"] = [[SideBar]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.SideBar.UICorner
G2L["6"] = Instance.new("UICorner", G2L["5"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.SideBar.Buttons
G2L["7"] = Instance.new("ScrollingFrame", G2L["5"]);
G2L["7"]["BorderSizePixel"] = 0;
G2L["7"]["CanvasSize"] = UDim2.new(0, 0, 0, 1);
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["7"]["BackgroundTransparency"] = 1;
G2L["7"]["Size"] = UDim2.new(1, 0, 0.7229729890823364, 0);
G2L["7"]["Selectable"] = false;
G2L["7"]["ClipsDescendants"] = false;
G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["ScrollBarThickness"] = 0;
G2L["7"]["Position"] = UDim2.new(0, 0, 0.14864864945411682, 0);
G2L["7"]["Name"] = [[Buttons]];
G2L["7"]["SelectionGroup"] = false;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.SideBar.Buttons.UIListLayout
G2L["8"] = Instance.new("UIListLayout", G2L["7"]);
G2L["8"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
G2L["8"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.SideBar.Title
G2L["9"] = Instance.new("TextLabel", G2L["5"]);
G2L["9"]["TextWrapped"] = true;
G2L["9"]["BorderSizePixel"] = 0;
G2L["9"]["TextScaled"] = true;
G2L["9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["9"]["TextSize"] = 14;
G2L["9"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9"]["Size"] = UDim2.new(0.8450704216957092, 0, 0.16554054617881775, 0);
G2L["9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9"]["Text"] = [[Ganteng Hub]];
G2L["9"]["Name"] = [[Title]];
G2L["9"]["BackgroundTransparency"] = 1;
G2L["9"]["Position"] = UDim2.new(0.0845070406794548, 0, 0, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.SideBar.UIGradient
G2L["a"] = Instance.new("UIGradient", G2L["5"]);
G2L["a"]["Rotation"] = 55;
G2L["a"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(122, 122, 122))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.SideBar.LocalPlayerInfo
G2L["b"] = Instance.new("Frame", G2L["5"]);
G2L["b"]["BorderSizePixel"] = 0;
G2L["b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b"]["BackgroundTransparency"] = 1;
G2L["b"]["Size"] = UDim2.new(0, 142, 0, 38);
G2L["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b"]["Position"] = UDim2.new(0, 0, 0.8716216087341309, 0);
G2L["b"]["Name"] = [[LocalPlayerInfo]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.SideBar.LocalPlayerInfo.Profile
G2L["c"] = Instance.new("ImageLabel", G2L["b"]);
G2L["c"]["BorderSizePixel"] = 0;
G2L["c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["c"]["Image"] = [[rbxasset://textures/ui/GuiImagePlaceholder.png]];
G2L["c"]["Size"] = UDim2.new(0, 26, 0, 26);
G2L["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c"]["Name"] = [[Profile]];
G2L["c"]["Position"] = UDim2.new(0, 20, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.SideBar.LocalPlayerInfo.Profile.UIAspectRatioConstraint
G2L["d"] = Instance.new("UIAspectRatioConstraint", G2L["c"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.SideBar.LocalPlayerInfo.Profile.UICorner
G2L["e"] = Instance.new("UICorner", G2L["c"]);
G2L["e"]["CornerRadius"] = UDim.new(100, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.SideBar.LocalPlayerInfo.UserName
G2L["f"] = Instance.new("TextLabel", G2L["b"]);
G2L["f"]["TextWrapped"] = true;
G2L["f"]["BorderSizePixel"] = 0;
G2L["f"]["TextScaled"] = true;
G2L["f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["f"]["TextSize"] = 14;
G2L["f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f"]["Size"] = UDim2.new(0.6338028311729431, 0, 0.34975162148475647, 0);
G2L["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f"]["Text"] = [[Player]];
G2L["f"]["Name"] = [[UserName]];
G2L["f"]["BackgroundTransparency"] = 1;
G2L["f"]["Position"] = UDim2.new(0.2957746386528015, 0, 0.15789394080638885, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.SideBar.LocalPlayerInfo.Time
G2L["10"] = Instance.new("TextLabel", G2L["b"]);
G2L["10"]["TextWrapped"] = true;
G2L["10"]["BorderSizePixel"] = 0;
G2L["10"]["TextScaled"] = true;
G2L["10"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["10"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["10"]["TextSize"] = 14;
G2L["10"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10"]["Size"] = UDim2.new(0.6338028311729431, 0, 0.3344598710536957, 0);
G2L["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10"]["Text"] = [[00:00:00]];
G2L["10"]["Name"] = [[Time]];
G2L["10"]["BackgroundTransparency"] = 1;
G2L["10"]["Position"] = UDim2.new(0.2957746386528015, 0, 0.5076462626457214, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.UIStroke
G2L["11"] = Instance.new("UIStroke", G2L["3"]);
G2L["11"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["11"]["Transparency"] = 0.6200000047683716;
G2L["11"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide
G2L["12"] = Instance.new("Frame", G2L["3"]);
G2L["12"]["BorderSizePixel"] = 0;
G2L["12"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["12"]["BackgroundTransparency"] = 1;
G2L["12"]["Size"] = UDim2.new(0.7193675637245178, 0, 1, 0);
G2L["12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12"]["Position"] = UDim2.new(0.2806324064731598, 0, 0, 0);
G2L["12"]["Name"] = [[MainSide]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Tabs
G2L["13"] = Instance.new("Frame", G2L["12"]);
G2L["13"]["BorderSizePixel"] = 0;
G2L["13"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13"]["BackgroundTransparency"] = 1;
G2L["13"]["Size"] = UDim2.new(0.9999999403953552, 0, 0.8716216087341309, 0);
G2L["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["13"]["Position"] = UDim2.new(0, 0, 0.12837837636470795, 0);
G2L["13"]["Name"] = [[Tabs]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Tabs.SearchedTab
G2L["14"] = Instance.new("ScrollingFrame", G2L["13"]);
G2L["14"]["Active"] = true;
G2L["14"]["BorderSizePixel"] = 0;
G2L["14"]["TopImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];
G2L["14"]["ScrollBarImageTransparency"] = 0.5;
G2L["14"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["14"]["BackgroundTransparency"] = 1;
G2L["14"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["14"]["ScrollBarImageColor3"] = Color3.fromRGB(151, 151, 151);
G2L["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14"]["ScrollBarThickness"] = 6;
G2L["14"]["Visible"] = false;
G2L["14"]["Name"] = [[SearchedTab]];
G2L["14"]["BottomImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Tabs.SearchedTab.UIListLayout
G2L["15"] = Instance.new("UIListLayout", G2L["14"]);
G2L["15"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar
G2L["16"] = Instance.new("Frame", G2L["12"]);
G2L["16"]["BorderSizePixel"] = 0;
G2L["16"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["16"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["16"]["BackgroundTransparency"] = 1;
G2L["16"]["LayoutOrder"] = 1;
G2L["16"]["Size"] = UDim2.new(1, 0, 0.12837837636470795, 0);
G2L["16"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16"]["Position"] = UDim2.new(0.5, 0, 0.06418918818235397, 0);
G2L["16"]["Name"] = [[TopBar]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Minimize
G2L["17"] = Instance.new("TextButton", G2L["16"]);
G2L["17"]["TextWrapped"] = true;
G2L["17"]["BorderSizePixel"] = 0;
G2L["17"]["TextScaled"] = true;
G2L["17"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["17"]["TextSize"] = 14;
G2L["17"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["17"]["TextColor3"] = Color3.fromRGB(191, 191, 191);
G2L["17"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["17"]["Size"] = UDim2.new(0.0714285746216774, 0, 0.6842105388641357, 0);
G2L["17"]["Name"] = [[Minimize]];
G2L["17"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["17"]["Text"] = [[-]];
G2L["17"]["Position"] = UDim2.new(0.8500000238418579, 0, 0.44999998807907104, 0);
G2L["17"]["BackgroundTransparency"] = 1;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Minimize.UIAspectRatioConstraint
G2L["18"] = Instance.new("UIAspectRatioConstraint", G2L["17"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Border
G2L["19"] = Instance.new("Frame", G2L["16"]);
G2L["19"]["BorderSizePixel"] = 0;
G2L["19"]["BackgroundColor3"] = Color3.fromRGB(209, 209, 209);
G2L["19"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["19"]["LayoutOrder"] = 1;
G2L["19"]["Size"] = UDim2.new(0.949999988079071, 0, 0.05999999865889549, 0);
G2L["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19"]["Position"] = UDim2.new(0.5, 0, 0.9473156929016113, 0);
G2L["19"]["Name"] = [[Border]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Border.UICorner
G2L["1a"] = Instance.new("UICorner", G2L["19"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Move
G2L["1b"] = Instance.new("TextButton", G2L["16"]);
G2L["1b"]["BorderSizePixel"] = 0;
G2L["1b"]["AutoButtonColor"] = false;
G2L["1b"]["BackgroundColor3"] = Color3.fromRGB(101, 101, 101);
G2L["1b"]["TextSize"] = 14;
G2L["1b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["1b"]["Size"] = UDim2.new(0.06625274568796158, 0, 0.6225790977478027, 0);
G2L["1b"]["Name"] = [[Move]];
G2L["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b"]["Text"] = [[]];
G2L["1b"]["Position"] = UDim2.new(0.05999999865889549, 0, 0.48100000619888306, 0);
G2L["1b"]["BackgroundTransparency"] = 1;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Move.UIAspectRatioConstraint
G2L["1c"] = Instance.new("UIAspectRatioConstraint", G2L["1b"]);
G2L["1c"]["AspectRatio"] = 1.0000001192092896;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Move.Frame
G2L["1d"] = Instance.new("Frame", G2L["1b"]);
G2L["1d"]["BorderSizePixel"] = 0;
G2L["1d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1d"]["Size"] = UDim2.new(0.9416196346282959, 0, 0.19879715144634247, 0);
G2L["1d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1d"]["Position"] = UDim2.new(0.02906207926571369, 0, 0.39955583214759827, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Move.Frame.UIGradient
G2L["1e"] = Instance.new("UIGradient", G2L["1d"]);
G2L["1e"]["Rotation"] = 55;
G2L["1e"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(204, 204, 204))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Move.Frame
G2L["1f"] = Instance.new("Frame", G2L["1b"]);
G2L["1f"]["BorderSizePixel"] = 0;
G2L["1f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1f"]["Size"] = UDim2.new(0.9416196346282959, 0, 0.19879715144634247, 0);
G2L["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f"]["Position"] = UDim2.new(0.02906207926571369, 0, 0.06539473682641983, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Move.Frame.UIGradient
G2L["20"] = Instance.new("UIGradient", G2L["1f"]);
G2L["20"]["Rotation"] = 55;
G2L["20"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(204, 204, 204))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Move.Frame
G2L["21"] = Instance.new("Frame", G2L["1b"]);
G2L["21"]["BorderSizePixel"] = 0;
G2L["21"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["21"]["Size"] = UDim2.new(0.9416196346282959, 0, 0.19879715144634247, 0);
G2L["21"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["21"]["Position"] = UDim2.new(0.02906207926571369, 0, 0.7454418540000916, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Move.Frame.UIGradient
G2L["22"] = Instance.new("UIGradient", G2L["21"]);
G2L["22"]["Rotation"] = 55;
G2L["22"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(204, 204, 204))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.SearchBar
G2L["23"] = Instance.new("TextBox", G2L["16"]);
G2L["23"]["CursorPosition"] = -1;
G2L["23"]["PlaceholderColor3"] = Color3.fromRGB(116, 116, 116);
G2L["23"]["BorderSizePixel"] = 0;
G2L["23"]["TextSize"] = 16;
G2L["23"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["23"]["BackgroundColor3"] = Color3.fromRGB(21, 21, 21);
G2L["23"]["TextColor3"] = Color3.fromRGB(208, 208, 208);
G2L["23"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["23"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["23"]["PlaceholderText"] = [[Search]];
G2L["23"]["Size"] = UDim2.new(0.3540000021457672, 0, 0.6399999856948853, 0);
G2L["23"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["23"]["Text"] = [[]];
G2L["23"]["Position"] = UDim2.new(0.29532966017723083, 0, 0.47368431091308594, 0);
G2L["23"]["Visible"] = false;
G2L["23"]["Name"] = [[SearchBar]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.SearchBar.UICorner
G2L["24"] = Instance.new("UICorner", G2L["23"]);
G2L["24"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.SearchBar.UIGradient
G2L["25"] = Instance.new("UIGradient", G2L["23"]);
G2L["25"]["Rotation"] = 55;
G2L["25"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(195, 195, 195))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.SearchBar.UIStroke
G2L["26"] = Instance.new("UIStroke", G2L["23"]);
G2L["26"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["26"]["Transparency"] = 0.5;
G2L["26"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.SearchBar.UIPadding
G2L["27"] = Instance.new("UIPadding", G2L["23"]);
G2L["27"]["PaddingLeft"] = UDim.new(0, 7);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.SearchBar.SearchButton
G2L["28"] = Instance.new("ImageButton", G2L["23"]);
G2L["28"]["BorderSizePixel"] = 0;
G2L["28"]["BackgroundColor3"] = Color3.fromRGB(21, 21, 21);
G2L["28"]["ImageColor3"] = Color3.fromRGB(116, 116, 116);
G2L["28"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["28"]["Image"] = [[http://www.roblox.com/asset/?id=5107220207]];
G2L["28"]["Size"] = UDim2.new(0, 15, 0, 15);
G2L["28"]["Name"] = [[SearchButton]];
G2L["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["28"]["Position"] = UDim2.new(0.8899999856948853, 0, 0.49300000071525574, 0);
G2L["28"]["BackgroundTransparency"] = 0.9900000095367432;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.SearchBar.SearchButton.UIAspectRatioConstraint
G2L["29"] = Instance.new("UIAspectRatioConstraint", G2L["28"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.ToggleInfo
G2L["2a"] = Instance.new("TextButton", G2L["16"]);
G2L["2a"]["BorderSizePixel"] = 0;
G2L["2a"]["AutoButtonColor"] = false;
G2L["2a"]["BackgroundColor3"] = Color3.fromRGB(21, 21, 21);
G2L["2a"]["Selectable"] = false;
G2L["2a"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["2a"]["Size"] = UDim2.new(0.22415801882743835, 0, 0.6400001645088196, 0);
G2L["2a"]["Name"] = [[ToggleInfo]];
G2L["2a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2a"]["Text"] = [[]];
G2L["2a"]["Position"] = UDim2.new(0.6930000185966492, 0, 0.4740000069141388, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.ToggleInfo.UICorner
G2L["2b"] = Instance.new("UICorner", G2L["2a"]);
G2L["2b"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.ToggleInfo.TextLabel
G2L["2c"] = Instance.new("TextLabel", G2L["2a"]);
G2L["2c"]["TextWrapped"] = true;
G2L["2c"]["BorderSizePixel"] = 0;
G2L["2c"]["TextScaled"] = true;
G2L["2c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["2c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["2c"]["TextSize"] = 14;
G2L["2c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2c"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["2c"]["Size"] = UDim2.new(0.7253822684288025, 0, 0.6129032969474792, 0);
G2L["2c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2c"]["Text"] = [[Show Info]];
G2L["2c"]["BackgroundTransparency"] = 1;
G2L["2c"]["Position"] = UDim2.new(0.4000000059604645, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.ToggleInfo.UIGradient
G2L["2d"] = Instance.new("UIGradient", G2L["2a"]);
G2L["2d"]["Rotation"] = 55;
G2L["2d"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(195, 195, 195))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.ToggleInfo.Toggle
G2L["2e"] = Instance.new("Frame", G2L["2a"]);
G2L["2e"]["BorderSizePixel"] = 0;
G2L["2e"]["BackgroundColor3"] = Color3.fromRGB(40, 40, 40);
G2L["2e"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["2e"]["Size"] = UDim2.new(0, 21, 0, 21);
G2L["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2e"]["Position"] = UDim2.new(0.8500000238418579, 0, 0.4970000088214874, 0);
G2L["2e"]["Name"] = [[Toggle]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.ToggleInfo.Toggle.UICorner
G2L["2f"] = Instance.new("UICorner", G2L["2e"]);
G2L["2f"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.ToggleInfo.Toggle.UIAspectRatioConstraint
G2L["30"] = Instance.new("UIAspectRatioConstraint", G2L["2e"]);
G2L["30"]["AspectRatio"] = 0.994199812412262;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.ToggleInfo.Toggle.Filler
G2L["31"] = Instance.new("Frame", G2L["2e"]);
G2L["31"]["BorderSizePixel"] = 0;
G2L["31"]["BackgroundColor3"] = Color3.fromRGB(222, 222, 222);
G2L["31"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["31"]["BackgroundTransparency"] = 1;
G2L["31"]["Size"] = UDim2.new(0.75, 0, 0.7499999403953552, 0);
G2L["31"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["31"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
G2L["31"]["Name"] = [[Filler]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.ToggleInfo.Toggle.Filler.UICorner
G2L["32"] = Instance.new("UICorner", G2L["31"]);
G2L["32"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.ToggleInfo.Toggle.Filler.UIAspectRatioConstraint
G2L["33"] = Instance.new("UIAspectRatioConstraint", G2L["31"]);
G2L["33"]["AspectRatio"] = 0.994199812412262;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Close
G2L["34"] = Instance.new("TextButton", G2L["16"]);
G2L["34"]["TextWrapped"] = true;
G2L["34"]["BorderSizePixel"] = 0;
G2L["34"]["TextScaled"] = true;
G2L["34"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["34"]["TextSize"] = 14;
G2L["34"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["34"]["TextColor3"] = Color3.fromRGB(191, 191, 191);
G2L["34"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["34"]["Size"] = UDim2.new(0.0714285746216774, 0, 0.6842105388641357, 0);
G2L["34"]["Name"] = [[Close]];
G2L["34"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["34"]["Text"] = [[X]];
G2L["34"]["Position"] = UDim2.new(0.9380000233650208, 0, 0.44999998807907104, 0);
G2L["34"]["BackgroundTransparency"] = 1;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Close.UIAspectRatioConstraint
G2L["35"] = Instance.new("UIAspectRatioConstraint", G2L["34"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Alternative
G2L["36"] = Instance.new("Frame", G2L["16"]);
G2L["36"]["Active"] = true;
G2L["36"]["BorderSizePixel"] = 0;
G2L["36"]["BackgroundColor3"] = Color3.fromRGB(21, 21, 21);
G2L["36"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["36"]["Size"] = UDim2.new(0.4153049886226654, 0, 0.6399999856948853, 0);
G2L["36"]["Selectable"] = true;
G2L["36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["36"]["Position"] = UDim2.new(0.32600000500679016, 0, -0.4740000069141388, 0);
G2L["36"]["Name"] = [[Alternative]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Alternative.UICorner
G2L["37"] = Instance.new("UICorner", G2L["36"]);
G2L["37"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Alternative.UIGradient
G2L["38"] = Instance.new("UIGradient", G2L["36"]);
G2L["38"]["Rotation"] = 55;
G2L["38"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(195, 195, 195))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Alternative.UIStroke
G2L["39"] = Instance.new("UIStroke", G2L["36"]);
G2L["39"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["39"]["Transparency"] = 0.5;
G2L["39"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.TopBar.Alternative.TextLabel
G2L["3a"] = Instance.new("TextLabel", G2L["36"]);
G2L["3a"]["BorderSizePixel"] = 0;
G2L["3a"]["BackgroundColor3"] = Color3.fromRGB(21, 21, 21);
G2L["3a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["3a"]["Selectable"] = true;
G2L["3a"]["TextSize"] = 15;
G2L["3a"]["TextColor3"] = Color3.fromRGB(167, 167, 167);
G2L["3a"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["3a"]["Active"] = true;
G2L["3a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3a"]["Text"] = [[]];
G2L["3a"]["BackgroundTransparency"] = 1;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing
G2L["3b"] = Instance.new("Frame", G2L["12"]);
G2L["3b"]["BorderSizePixel"] = 0;
G2L["3b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3b"]["BackgroundTransparency"] = 1;
G2L["3b"]["Size"] = UDim2.new(0.9999999403953552, 0, 0.8716216087341309, 0);
G2L["3b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3b"]["Position"] = UDim2.new(0, 0, 0.12837837636470795, 0);
G2L["3b"]["Name"] = [[Landing]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.TitleFrame
G2L["3c"] = Instance.new("Frame", G2L["3b"]);
G2L["3c"]["BorderSizePixel"] = 0;
G2L["3c"]["BackgroundColor3"] = Color3.fromRGB(23, 23, 23);
G2L["3c"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["3c"]["Size"] = UDim2.new(0.8928571939468384, 0, 0.22868217527866364, 0);
G2L["3c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3c"]["Position"] = UDim2.new(0.4931319057941437, 0, 0.17940887808799744, 0);
G2L["3c"]["Name"] = [[TitleFrame]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.TitleFrame.Title
G2L["3d"] = Instance.new("TextLabel", G2L["3c"]);
G2L["3d"]["BorderSizePixel"] = 0;
G2L["3d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3d"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["3d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["3d"]["TextSize"] = 21;
G2L["3d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3d"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["3d"]["Size"] = UDim2.new(1.0861539840698242, 0, 0.38983049988746643, 0);
G2L["3d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d"]["Text"] = [[Ganteng Hub [ PREMIUM ] ]];
G2L["3d"]["Name"] = [[Title]];
G2L["3d"]["BackgroundTransparency"] = 1;
G2L["3d"]["Position"] = UDim2.new(0.1975381225347519, 0, 0.2724870443344116, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.TitleFrame.Icon
G2L["3e"] = Instance.new("ImageLabel", G2L["3c"]);
G2L["3e"]["BorderSizePixel"] = 0;
G2L["3e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3e"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["3e"]["Image"] = [[rbxassetid://15006559003]];
G2L["3e"]["Size"] = UDim2.new(0.14769230782985687, 0, 0.8135592937469482, 0);
G2L["3e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3e"]["Name"] = [[Icon]];
G2L["3e"]["Position"] = UDim2.new(0.02407696098089218, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.TitleFrame.Icon.UIAspectRatioConstraint
G2L["3f"] = Instance.new("UIAspectRatioConstraint", G2L["3e"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.TitleFrame.Icon.UICorner
G2L["40"] = Instance.new("UICorner", G2L["3e"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.TitleFrame.UICorner
G2L["41"] = Instance.new("UICorner", G2L["3c"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.TitleFrame.UIGradient
G2L["42"] = Instance.new("UIGradient", G2L["3c"]);
G2L["42"]["Rotation"] = 55;
G2L["42"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(122, 122, 122))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.TitleFrame.SubTitle
G2L["43"] = Instance.new("TextLabel", G2L["3c"]);
G2L["43"]["BorderSizePixel"] = 0;
G2L["43"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["43"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["43"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["43"]["TextSize"] = 17;
G2L["43"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["43"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["43"]["Size"] = UDim2.new(0.8134894967079163, 0, 0.3050847351551056, 0);
G2L["43"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["43"]["Text"] = [[Welcome to Ganteng Hub!]];
G2L["43"]["Name"] = [[SubTitle]];
G2L["43"]["BackgroundTransparency"] = 1;
G2L["43"]["Position"] = UDim2.new(0.1975381225347519, 0, 0.6600000262260437, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Changelogs
G2L["44"] = Instance.new("Frame", G2L["3b"]);
G2L["44"]["BorderSizePixel"] = 0;
G2L["44"]["BackgroundColor3"] = Color3.fromRGB(23, 23, 23);
G2L["44"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["44"]["Size"] = UDim2.new(0.43681323528289795, 0, 0.5775193572044373, 0);
G2L["44"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["44"]["Position"] = UDim2.new(0.7310000061988831, 0, 0.6474341154098511, 0);
G2L["44"]["Name"] = [[Changelogs]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Changelogs.UICorner
G2L["45"] = Instance.new("UICorner", G2L["44"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Changelogs.UIGradient
G2L["46"] = Instance.new("UIGradient", G2L["44"]);
G2L["46"]["Rotation"] = 55;
G2L["46"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(122, 122, 122))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Changelogs.ScrollingFrame
G2L["47"] = Instance.new("ScrollingFrame", G2L["44"]);
G2L["47"]["Active"] = true;
G2L["47"]["BorderSizePixel"] = 0;
G2L["47"]["CanvasSize"] = UDim2.new(0, 0, 0, 1);
G2L["47"]["TopImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];
G2L["47"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["47"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["47"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["47"]["BackgroundTransparency"] = 1;
G2L["47"]["Size"] = UDim2.new(0.8999999761581421, 0, 0.7900000214576721, 0);
G2L["47"]["ScrollBarImageColor3"] = Color3.fromRGB(176, 176, 176);
G2L["47"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["47"]["ScrollBarThickness"] = 0;
G2L["47"]["Position"] = UDim2.new(0.5000000596046448, 0, 0.5550738573074341, 0);
G2L["47"]["BottomImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Changelogs.ScrollingFrame.UIListLayout
G2L["48"] = Instance.new("UIListLayout", G2L["47"]);
G2L["48"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
G2L["48"]["Padding"] = UDim.new(0, 4);
G2L["48"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Changelogs.Title
G2L["49"] = Instance.new("TextLabel", G2L["44"]);
G2L["49"]["BorderSizePixel"] = 0;
G2L["49"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["49"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["49"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["49"]["TextSize"] = 16;
G2L["49"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["49"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["49"]["Size"] = UDim2.new(0.9056603908538818, 0, 0.10738255083560944, 0);
G2L["49"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["49"]["Text"] = [[Changelogs]];
G2L["49"]["Name"] = [[Title]];
G2L["49"]["BackgroundTransparency"] = 1;
G2L["49"]["Position"] = UDim2.new(0.5009999871253967, 0, 0.08900000154972076, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos
G2L["4a"] = Instance.new("Frame", G2L["3b"]);
G2L["4a"]["BorderSizePixel"] = 0;
G2L["4a"]["BackgroundColor3"] = Color3.fromRGB(23, 23, 23);
G2L["4a"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["4a"]["Size"] = UDim2.new(0.42307695746421814, 0, 0.5775193572044373, 0);
G2L["4a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4a"]["Position"] = UDim2.new(0.25991755723953247, 0, 0.6474341154098511, 0);
G2L["4a"]["Name"] = [[Infos]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.UICorner
G2L["4b"] = Instance.new("UICorner", G2L["4a"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.UIGradient
G2L["4c"] = Instance.new("UIGradient", G2L["4a"]);
G2L["4c"]["Rotation"] = 55;
G2L["4c"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(122, 122, 122))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Title
G2L["4d"] = Instance.new("TextLabel", G2L["4a"]);
G2L["4d"]["BorderSizePixel"] = 0;
G2L["4d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4d"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["4d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["4d"]["TextSize"] = 16;
G2L["4d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4d"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["4d"]["Size"] = UDim2.new(0.9090909361839294, 0, 0.10738255083560944, 0);
G2L["4d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4d"]["Text"] = [[Informations]];
G2L["4d"]["Name"] = [[Title]];
G2L["4d"]["BackgroundTransparency"] = 1;
G2L["4d"]["Position"] = UDim2.new(0.5053700804710388, 0, 0.088999904692173, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Introdution
G2L["4e"] = Instance.new("Frame", G2L["4a"]);
G2L["4e"]["BorderSizePixel"] = 0;
G2L["4e"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["4e"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["4e"]["Size"] = UDim2.new(0.9155844449996948, 0, 0.4429530203342438, 0);
G2L["4e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4e"]["Position"] = UDim2.new(0.5, 0, 0.4056878685951233, 0);
G2L["4e"]["Name"] = [[Introdution]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Introdution.UICorner
G2L["4f"] = Instance.new("UICorner", G2L["4e"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Introdution.UIGradient
G2L["50"] = Instance.new("UIGradient", G2L["4e"]);
G2L["50"]["Rotation"] = 55;
G2L["50"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(122, 122, 122))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Introdution.Title
G2L["51"] = Instance.new("TextLabel", G2L["4e"]);
G2L["51"]["BorderSizePixel"] = 0;
G2L["51"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["51"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["51"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["51"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["51"]["TextSize"] = 12;
G2L["51"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["51"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["51"]["Size"] = UDim2.new(0.9432623982429504, 0, 0.22727273404598236, 0);
G2L["51"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["51"]["Text"] = [[What is Ganteng Hub? ]];
G2L["51"]["Name"] = [[Title]];
G2L["51"]["BackgroundTransparency"] = 1;
G2L["51"]["Position"] = UDim2.new(0.5035461187362671, 0, 0.1818181872367859, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Introdution.Description
G2L["52"] = Instance.new("TextLabel", G2L["4e"]);
G2L["52"]["TextWrapped"] = true;
G2L["52"]["BorderSizePixel"] = 0;
G2L["52"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["52"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["52"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["52"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["52"]["TextSize"] = 11;
G2L["52"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["52"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["52"]["Size"] = UDim2.new(0.9432623982429504, 0, 0.6969696879386902, 0);
G2L["52"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["52"]["Text"] = [[Ganteng Hub is a tool that allows player to have fun with game without spending time to reach max levels.]];
G2L["52"]["Name"] = [[Description]];
G2L["52"]["BackgroundTransparency"] = 1;
G2L["52"]["Position"] = UDim2.new(0.5035461187362671, 0, 0.6515151262283325, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Socials
G2L["53"] = Instance.new("Frame", G2L["4a"]);
G2L["53"]["BorderSizePixel"] = 0;
G2L["53"]["BackgroundColor3"] = Color3.fromRGB(32, 32, 32);
G2L["53"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["53"]["Size"] = UDim2.new(0.9155844449996948, 0, 0.28859061002731323, 0);
G2L["53"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["53"]["Position"] = UDim2.new(0.5, 0, 0.8021265864372253, 0);
G2L["53"]["Name"] = [[Socials]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Socials.UICorner
G2L["54"] = Instance.new("UICorner", G2L["53"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Socials.UIGradient
G2L["55"] = Instance.new("UIGradient", G2L["53"]);
G2L["55"]["Rotation"] = 55;
G2L["55"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(122, 122, 122))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Socials.Discord
G2L["56"] = Instance.new("ImageButton", G2L["53"]);
G2L["56"]["BorderSizePixel"] = 0;
G2L["56"]["AutoButtonColor"] = false;
G2L["56"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["56"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["56"]["Size"] = UDim2.new(0.4592592716217041, 0, 0.6744186282157898, 0);
G2L["56"]["Name"] = [[Discord]];
G2L["56"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["56"]["Position"] = UDim2.new(0.22962963581085205, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Socials.Discord.UICorner
G2L["57"] = Instance.new("UICorner", G2L["56"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Socials.Discord.UIGradient
G2L["58"] = Instance.new("UIGradient", G2L["56"]);
G2L["58"]["Rotation"] = 55;
G2L["58"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(97, 86, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(38, 0, 224))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Socials.Discord.TextLabel
G2L["59"] = Instance.new("TextLabel", G2L["56"]);
G2L["59"]["TextWrapped"] = true;
G2L["59"]["BorderSizePixel"] = 0;
G2L["59"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["59"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["59"]["TextSize"] = 14;
G2L["59"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["59"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["59"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["59"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["59"]["Text"] = [[Discord]];
G2L["59"]["BackgroundTransparency"] = 1;
G2L["59"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Socials.Discord.UIStroke
G2L["5a"] = Instance.new("UIStroke", G2L["56"]);
G2L["5a"]["Color"] = Color3.fromRGB(50, 167, 255);
G2L["5a"]["Thickness"] = 1.5;
G2L["5a"]["Transparency"] = 0.5;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Socials.Discord.UIAspectRatioConstraint
G2L["5b"] = Instance.new("UIAspectRatioConstraint", G2L["56"]);
G2L["5b"]["AspectRatio"] = 2.1379308700561523;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Socials.UIListLayout
G2L["5c"] = Instance.new("UIListLayout", G2L["53"]);
G2L["5c"]["VerticalAlignment"] = Enum.VerticalAlignment.Center;
G2L["5c"]["FillDirection"] = Enum.FillDirection.Horizontal;
G2L["5c"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
G2L["5c"]["Padding"] = UDim.new(0, 5);
G2L["5c"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Socials.UIPadding
G2L["5d"] = Instance.new("UIPadding", G2L["53"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Socials.Youtube
G2L["5e"] = Instance.new("ImageButton", G2L["53"]);
G2L["5e"]["BorderSizePixel"] = 0;
G2L["5e"]["AutoButtonColor"] = false;
G2L["5e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5e"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["5e"]["Size"] = UDim2.new(0.4592592716217041, 0, 0.6744186282157898, 0);
G2L["5e"]["Name"] = [[Youtube]];
G2L["5e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5e"]["Position"] = UDim2.new(0.22962963581085205, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Socials.Youtube.UICorner
G2L["5f"] = Instance.new("UICorner", G2L["5e"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Socials.Youtube.UIGradient
G2L["60"] = Instance.new("UIGradient", G2L["5e"]);
G2L["60"]["Rotation"] = 55;
G2L["60"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 0, 5)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(224, 0, 205))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Socials.Youtube.TextLabel
G2L["61"] = Instance.new("TextLabel", G2L["5e"]);
G2L["61"]["TextWrapped"] = true;
G2L["61"]["BorderSizePixel"] = 0;
G2L["61"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["61"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["61"]["TextSize"] = 14;
G2L["61"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["61"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["61"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["61"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["61"]["Text"] = [[Youtube]];
G2L["61"]["BackgroundTransparency"] = 1;
G2L["61"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Socials.Youtube.UIAspectRatioConstraint
G2L["62"] = Instance.new("UIAspectRatioConstraint", G2L["5e"]);
G2L["62"]["AspectRatio"] = 2.1379308700561523;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.MainSide.Landing.Infos.Socials.Youtube.UIStroke
G2L["63"] = Instance.new("UIStroke", G2L["5e"]);
G2L["63"]["Color"] = Color3.fromRGB(255, 0, 133);
G2L["63"]["Thickness"] = 1.5;
G2L["63"]["Transparency"] = 0.5;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.UIGradient
G2L["64"] = Instance.new("UIGradient", G2L["3"]);
G2L["64"]["Rotation"] = 55;
G2L["64"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(122, 122, 122))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs
G2L["65"] = Instance.new("Folder", G2L["3"]);
G2L["65"]["Name"] = [[PremadeLibs]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab
G2L["66"] = Instance.new("Folder", G2L["65"]);
G2L["66"]["Name"] = [[InsideTab]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Button
G2L["67"] = Instance.new("Frame", G2L["66"]);
G2L["67"]["BorderSizePixel"] = 0;
G2L["67"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["67"]["BackgroundTransparency"] = 1;
G2L["67"]["Size"] = UDim2.new(1, 0, 0, 39);
G2L["67"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["67"]["Visible"] = false;
G2L["67"]["Name"] = [[Button]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Button.Frame
G2L["68"] = Instance.new("TextButton", G2L["67"]);
G2L["68"]["BorderSizePixel"] = 0;
G2L["68"]["AutoButtonColor"] = false;
G2L["68"]["BackgroundColor3"] = Color3.fromRGB(21, 21, 21);
G2L["68"]["Selectable"] = false;
G2L["68"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["68"]["Size"] = UDim2.new(0.9604218006134033, 0, 0.8157894611358643, 0);
G2L["68"]["Name"] = [[Frame]];
G2L["68"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["68"]["Text"] = [[]];
G2L["68"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Button.Frame.UICorner
G2L["69"] = Instance.new("UICorner", G2L["68"]);
G2L["69"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Button.Frame.TextLabel
G2L["6a"] = Instance.new("TextLabel", G2L["68"]);
G2L["6a"]["TextWrapped"] = true;
G2L["6a"]["BorderSizePixel"] = 0;
G2L["6a"]["TextScaled"] = true;
G2L["6a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["6a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["6a"]["TextSize"] = 14;
G2L["6a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6a"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["6a"]["Size"] = UDim2.new(0.8226743936538696, 0, 0.6129032373428345, 0);
G2L["6a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6a"]["Text"] = [[Button]];
G2L["6a"]["BackgroundTransparency"] = 1;
G2L["6a"]["Position"] = UDim2.new(0.4399999976158142, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Button.Frame.UIGradient
G2L["6b"] = Instance.new("UIGradient", G2L["68"]);
G2L["6b"]["Rotation"] = 55;
G2L["6b"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(195, 195, 195))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Button.Frame.UIStroke
G2L["6c"] = Instance.new("UIStroke", G2L["68"]);
G2L["6c"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["6c"]["Thickness"] = 0.8500000238418579;
G2L["6c"]["Transparency"] = 1;
G2L["6c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Keybind
G2L["6d"] = Instance.new("Frame", G2L["66"]);
G2L["6d"]["BorderSizePixel"] = 0;
G2L["6d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6d"]["BackgroundTransparency"] = 1;
G2L["6d"]["Size"] = UDim2.new(1, 0, 0, 39);
G2L["6d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6d"]["Visible"] = false;
G2L["6d"]["Name"] = [[Keybind]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Keybind.Frame
G2L["6e"] = Instance.new("TextButton", G2L["6d"]);
G2L["6e"]["BorderSizePixel"] = 0;
G2L["6e"]["AutoButtonColor"] = false;
G2L["6e"]["BackgroundColor3"] = Color3.fromRGB(21, 21, 21);
G2L["6e"]["Selectable"] = false;
G2L["6e"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["6e"]["Size"] = UDim2.new(0.9604218006134033, 0, 0.8157894611358643, 0);
G2L["6e"]["Name"] = [[Frame]];
G2L["6e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6e"]["Text"] = [[]];
G2L["6e"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Keybind.Frame.UICorner
G2L["6f"] = Instance.new("UICorner", G2L["6e"]);
G2L["6f"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Keybind.Frame.TextLabel
G2L["70"] = Instance.new("TextLabel", G2L["6e"]);
G2L["70"]["TextWrapped"] = true;
G2L["70"]["BorderSizePixel"] = 0;
G2L["70"]["TextScaled"] = true;
G2L["70"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["70"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["70"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["70"]["TextSize"] = 14;
G2L["70"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["70"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["70"]["Size"] = UDim2.new(0.7575578093528748, 0, 0.6129031777381897, 0);
G2L["70"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["70"]["Text"] = [[Keybind]];
G2L["70"]["BackgroundTransparency"] = 1;
G2L["70"]["Position"] = UDim2.new(0.40744173526763916, 0, 0.5000002384185791, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Keybind.Frame.UIGradient
G2L["71"] = Instance.new("UIGradient", G2L["6e"]);
G2L["71"]["Rotation"] = 55;
G2L["71"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(195, 195, 195))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Keybind.Frame.Bind
G2L["72"] = Instance.new("TextButton", G2L["6e"]);
G2L["72"]["TextWrapped"] = true;
G2L["72"]["Active"] = false;
G2L["72"]["BorderSizePixel"] = 0;
G2L["72"]["AutoButtonColor"] = false;
G2L["72"]["TextScaled"] = true;
G2L["72"]["BackgroundColor3"] = Color3.fromRGB(40, 40, 40);
G2L["72"]["TextSize"] = 20;
G2L["72"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["72"]["TextColor3"] = Color3.fromRGB(191, 191, 191);
G2L["72"]["Selectable"] = false;
G2L["72"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["72"]["Size"] = UDim2.new(0.13624930381774902, 0, 0.75, 0);
G2L["72"]["Name"] = [[Bind]];
G2L["72"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["72"]["Text"] = [[???]];
G2L["72"]["Position"] = UDim2.new(0.9092356562614441, 0, 0.4999999701976776, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Keybind.Frame.Bind.UICorner
G2L["73"] = Instance.new("UICorner", G2L["72"]);
G2L["73"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Keybind.Frame.Bind.UIGradient
G2L["74"] = Instance.new("UIGradient", G2L["72"]);
G2L["74"]["Rotation"] = 55;
G2L["74"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(195, 195, 195))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Keybind.Frame.UIStroke
G2L["75"] = Instance.new("UIStroke", G2L["6e"]);
G2L["75"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["75"]["Thickness"] = 0.8500000238418579;
G2L["75"]["Transparency"] = 1;
G2L["75"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Slider
G2L["76"] = Instance.new("Frame", G2L["66"]);
G2L["76"]["BorderSizePixel"] = 0;
G2L["76"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["76"]["BackgroundTransparency"] = 1;
G2L["76"]["Size"] = UDim2.new(1, 0, 0, 69);
G2L["76"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["76"]["Visible"] = false;
G2L["76"]["Name"] = [[Slider]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Slider.Frame
G2L["77"] = Instance.new("Frame", G2L["76"]);
G2L["77"]["Active"] = true;
G2L["77"]["BorderSizePixel"] = 0;
G2L["77"]["BackgroundColor3"] = Color3.fromRGB(21, 21, 21);
G2L["77"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["77"]["Size"] = UDim2.new(0.9599999785423279, 0, 0.8500000238418579, 0);
G2L["77"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["77"]["Position"] = UDim2.new(0.5, 0, 0.48316532373428345, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Slider.Frame.UICorner
G2L["78"] = Instance.new("UICorner", G2L["77"]);
G2L["78"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Slider.Frame.TextLabel
G2L["79"] = Instance.new("TextLabel", G2L["77"]);
G2L["79"]["TextWrapped"] = true;
G2L["79"]["BorderSizePixel"] = 0;
G2L["79"]["TextScaled"] = true;
G2L["79"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["79"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["79"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["79"]["TextSize"] = 14;
G2L["79"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["79"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["79"]["Size"] = UDim2.new(0.7575578689575195, 0, 0.31506994366645813, 0);
G2L["79"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["79"]["Text"] = [[Slider]];
G2L["79"]["BackgroundTransparency"] = 1;
G2L["79"]["Position"] = UDim2.new(0.40744179487228394, 0, 0.24790118634700775, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Slider.Frame.UIGradient
G2L["7a"] = Instance.new("UIGradient", G2L["77"]);
G2L["7a"]["Rotation"] = 55;
G2L["7a"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(128, 128, 128))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Slider.Frame.Textbox
G2L["7b"] = Instance.new("TextBox", G2L["77"]);
G2L["7b"]["Active"] = false;
G2L["7b"]["PlaceholderColor3"] = Color3.fromRGB(164, 164, 164);
G2L["7b"]["BorderSizePixel"] = 0;
G2L["7b"]["TextSize"] = 20;
G2L["7b"]["TextWrapped"] = true;
G2L["7b"]["TextScaled"] = true;
G2L["7b"]["BackgroundColor3"] = Color3.fromRGB(40, 40, 40);
G2L["7b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["7b"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["7b"]["Size"] = UDim2.new(0.13600000739097595, 0, 0.3205437660217285, 0);
G2L["7b"]["Selectable"] = false;
G2L["7b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7b"]["Text"] = [[]];
G2L["7b"]["Position"] = UDim2.new(0.9092612266540527, 0, 0.2451651692390442, 0);
G2L["7b"]["Name"] = [[Textbox]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Slider.Frame.Textbox.UICorner
G2L["7c"] = Instance.new("UICorner", G2L["7b"]);
G2L["7c"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Slider.Frame.FrameSlider
G2L["7d"] = Instance.new("Frame", G2L["77"]);
G2L["7d"]["BorderSizePixel"] = 0;
G2L["7d"]["BackgroundColor3"] = Color3.fromRGB(109, 109, 109);
G2L["7d"]["Size"] = UDim2.new(0.9512612819671631, 0, 0.3149999976158142, 0);
G2L["7d"]["ClipsDescendants"] = true;
G2L["7d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7d"]["Position"] = UDim2.new(0.02599991112947464, 0, 0.5499999523162842, 0);
G2L["7d"]["Name"] = [[FrameSlider]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Slider.Frame.FrameSlider.UICorner
G2L["7e"] = Instance.new("UICorner", G2L["7d"]);
G2L["7e"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Slider.Frame.FrameSlider.Fill
G2L["7f"] = Instance.new("Frame", G2L["7d"]);
G2L["7f"]["BorderSizePixel"] = 0;
G2L["7f"]["BackgroundColor3"] = Color3.fromRGB(236, 236, 236);
G2L["7f"]["Size"] = UDim2.new(0, 0, 1, 0);
G2L["7f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7f"]["Name"] = [[Fill]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Slider.Frame.FrameSlider.Fill.UICorner
G2L["80"] = Instance.new("UICorner", G2L["7f"]);
G2L["80"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Slider.Frame.FrameSlider.Fill.UIGradient
G2L["81"] = Instance.new("UIGradient", G2L["7f"]);
G2L["81"]["Rotation"] = 55;
G2L["81"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(195, 195, 195))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Slider.Frame.FrameSlider.Fill.UIStroke
G2L["82"] = Instance.new("UIStroke", G2L["7f"]);
G2L["82"]["Color"] = Color3.fromRGB(190, 190, 190);
G2L["82"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Slider.Frame.FrameSlider.Trigger
G2L["83"] = Instance.new("TextButton", G2L["7d"]);
G2L["83"]["BorderSizePixel"] = 0;
G2L["83"]["AutoButtonColor"] = false;
G2L["83"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["83"]["TextSize"] = 14;
G2L["83"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["83"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["83"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["83"]["Name"] = [[Trigger]];
G2L["83"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["83"]["Text"] = [[]];
G2L["83"]["BackgroundTransparency"] = 1;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Slider.Frame.FrameSlider.UIGradient
G2L["84"] = Instance.new("UIGradient", G2L["7d"]);
G2L["84"]["Rotation"] = 55;
G2L["84"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(195, 195, 195))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Slider.Frame.FrameSlider.UIStroke
G2L["85"] = Instance.new("UIStroke", G2L["7d"]);
G2L["85"]["Color"] = Color3.fromRGB(190, 190, 190);
G2L["85"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Slider.Frame.UIStroke
G2L["86"] = Instance.new("UIStroke", G2L["77"]);
G2L["86"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["86"]["Thickness"] = 0.8500000238418579;
G2L["86"]["Transparency"] = 1;
G2L["86"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Textbox
G2L["87"] = Instance.new("Frame", G2L["66"]);
G2L["87"]["BorderSizePixel"] = 0;
G2L["87"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["87"]["BackgroundTransparency"] = 1;
G2L["87"]["Size"] = UDim2.new(1, 0, 0, 39);
G2L["87"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["87"]["Visible"] = false;
G2L["87"]["Name"] = [[Textbox]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Textbox.Frame
G2L["88"] = Instance.new("TextButton", G2L["87"]);
G2L["88"]["BorderSizePixel"] = 0;
G2L["88"]["AutoButtonColor"] = false;
G2L["88"]["BackgroundColor3"] = Color3.fromRGB(21, 21, 21);
G2L["88"]["Selectable"] = false;
G2L["88"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["88"]["Size"] = UDim2.new(0.9604218006134033, 0, 0.8157894611358643, 0);
G2L["88"]["Name"] = [[Frame]];
G2L["88"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["88"]["Text"] = [[]];
G2L["88"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Textbox.Frame.UICorner
G2L["89"] = Instance.new("UICorner", G2L["88"]);
G2L["89"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Textbox.Frame.TextLabel
G2L["8a"] = Instance.new("TextLabel", G2L["88"]);
G2L["8a"]["TextWrapped"] = true;
G2L["8a"]["BorderSizePixel"] = 0;
G2L["8a"]["TextScaled"] = true;
G2L["8a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["8a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["8a"]["TextSize"] = 14;
G2L["8a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8a"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["8a"]["Size"] = UDim2.new(0.7575578093528748, 0, 0.6129031777381897, 0);
G2L["8a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8a"]["Text"] = [[Textbox]];
G2L["8a"]["BackgroundTransparency"] = 1;
G2L["8a"]["Position"] = UDim2.new(0.40744173526763916, 0, 0.5000002384185791, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Textbox.Frame.UIGradient
G2L["8b"] = Instance.new("UIGradient", G2L["88"]);
G2L["8b"]["Rotation"] = 55;
G2L["8b"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(195, 195, 195))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Textbox.Frame.Textbox
G2L["8c"] = Instance.new("TextBox", G2L["88"]);
G2L["8c"]["Active"] = false;
G2L["8c"]["PlaceholderColor3"] = Color3.fromRGB(164, 164, 164);
G2L["8c"]["BorderSizePixel"] = 0;
G2L["8c"]["TextSize"] = 20;
G2L["8c"]["TextWrapped"] = true;
G2L["8c"]["BackgroundColor3"] = Color3.fromRGB(40, 40, 40);
G2L["8c"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["8c"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["8c"]["Size"] = UDim2.new(0.19099999964237213, 0, 0.75, 0);
G2L["8c"]["Selectable"] = false;
G2L["8c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8c"]["Text"] = [[]];
G2L["8c"]["Position"] = UDim2.new(0.8818603157997131, 0, 0.4999999701976776, 0);
G2L["8c"]["Name"] = [[Textbox]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Textbox.Frame.Textbox.UICorner
G2L["8d"] = Instance.new("UICorner", G2L["8c"]);
G2L["8d"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Textbox.Frame.Textbox.UIGradient
G2L["8e"] = Instance.new("UIGradient", G2L["8c"]);
G2L["8e"]["Rotation"] = 55;
G2L["8e"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(195, 195, 195))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Textbox.Frame.Textbox.UIStroke
G2L["8f"] = Instance.new("UIStroke", G2L["8c"]);
G2L["8f"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["8f"]["Transparency"] = 1;
G2L["8f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Textbox.Frame.UIStroke
G2L["90"] = Instance.new("UIStroke", G2L["88"]);
G2L["90"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["90"]["Thickness"] = 0.8500000238418579;
G2L["90"]["Transparency"] = 1;
G2L["90"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Toggle
G2L["91"] = Instance.new("Frame", G2L["66"]);
G2L["91"]["BorderSizePixel"] = 0;
G2L["91"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["91"]["BackgroundTransparency"] = 1;
G2L["91"]["Size"] = UDim2.new(1, 0, 0, 39);
G2L["91"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["91"]["Visible"] = false;
G2L["91"]["Name"] = [[Toggle]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Toggle.Frame
G2L["92"] = Instance.new("TextButton", G2L["91"]);
G2L["92"]["BorderSizePixel"] = 0;
G2L["92"]["AutoButtonColor"] = false;
G2L["92"]["BackgroundColor3"] = Color3.fromRGB(21, 21, 21);
G2L["92"]["Selectable"] = false;
G2L["92"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["92"]["Size"] = UDim2.new(0.9604218006134033, 0, 0.8157894611358643, 0);
G2L["92"]["Name"] = [[Frame]];
G2L["92"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["92"]["Text"] = [[]];
G2L["92"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Toggle.Frame.UICorner
G2L["93"] = Instance.new("UICorner", G2L["92"]);
G2L["93"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Toggle.Frame.TextLabel
G2L["94"] = Instance.new("TextLabel", G2L["92"]);
G2L["94"]["TextWrapped"] = true;
G2L["94"]["BorderSizePixel"] = 0;
G2L["94"]["TextScaled"] = true;
G2L["94"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["94"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["94"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["94"]["TextSize"] = 14;
G2L["94"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["94"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["94"]["Size"] = UDim2.new(0.8226743936538696, 0, 0.6129032373428345, 0);
G2L["94"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["94"]["Text"] = [[Toggle]];
G2L["94"]["BackgroundTransparency"] = 1;
G2L["94"]["Position"] = UDim2.new(0.4399999976158142, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Toggle.Frame.UIGradient
G2L["95"] = Instance.new("UIGradient", G2L["92"]);
G2L["95"]["Rotation"] = 55;
G2L["95"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(195, 195, 195))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Toggle.Frame.Toggle
G2L["96"] = Instance.new("Frame", G2L["92"]);
G2L["96"]["BorderSizePixel"] = 0;
G2L["96"]["BackgroundColor3"] = Color3.fromRGB(40, 40, 40);
G2L["96"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["96"]["Size"] = UDim2.new(0.0749843642115593, 0, 0.9327866435050964, 0);
G2L["96"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["96"]["Position"] = UDim2.new(0.9399999380111694, 0, 0.4973480999469757, 0);
G2L["96"]["Name"] = [[Toggle]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Toggle.Frame.Toggle.UICorner
G2L["97"] = Instance.new("UICorner", G2L["96"]);
G2L["97"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Toggle.Frame.Toggle.UIAspectRatioConstraint
G2L["98"] = Instance.new("UIAspectRatioConstraint", G2L["96"]);
G2L["98"]["AspectRatio"] = 0.994199812412262;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Toggle.Frame.Toggle.Filler
G2L["99"] = Instance.new("Frame", G2L["96"]);
G2L["99"]["BorderSizePixel"] = 0;
G2L["99"]["BackgroundColor3"] = Color3.fromRGB(222, 222, 222);
G2L["99"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["99"]["Size"] = UDim2.new(0.75, 0, 0.75, 0);
G2L["99"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["99"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
G2L["99"]["Name"] = [[Filler]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Toggle.Frame.Toggle.Filler.UICorner
G2L["9a"] = Instance.new("UICorner", G2L["99"]);
G2L["9a"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Toggle.Frame.Toggle.Filler.UIAspectRatioConstraint
G2L["9b"] = Instance.new("UIAspectRatioConstraint", G2L["99"]);
G2L["9b"]["AspectRatio"] = 0.994199812412262;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Toggle.Frame.Toggle.UIStroke
G2L["9c"] = Instance.new("UIStroke", G2L["96"]);
G2L["9c"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["9c"]["Transparency"] = 1;
G2L["9c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Toggle.Frame.UIStroke
G2L["9d"] = Instance.new("UIStroke", G2L["92"]);
G2L["9d"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["9d"]["Thickness"] = 0.8500000238418579;
G2L["9d"]["Transparency"] = 1;
G2L["9d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Label
G2L["9e"] = Instance.new("Frame", G2L["66"]);
G2L["9e"]["BorderSizePixel"] = 0;
G2L["9e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9e"]["BackgroundTransparency"] = 1;
G2L["9e"]["Size"] = UDim2.new(1, 0, 0, 39);
G2L["9e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9e"]["Visible"] = false;
G2L["9e"]["Name"] = [[Label]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Label.Frame
G2L["9f"] = Instance.new("TextButton", G2L["9e"]);
G2L["9f"]["BorderSizePixel"] = 0;
G2L["9f"]["AutoButtonColor"] = false;
G2L["9f"]["BackgroundColor3"] = Color3.fromRGB(37, 37, 37);
G2L["9f"]["Selectable"] = false;
G2L["9f"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["9f"]["Size"] = UDim2.new(0.9604218006134033, 0, 0.8157894611358643, 0);
G2L["9f"]["Name"] = [[Frame]];
G2L["9f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9f"]["Text"] = [[]];
G2L["9f"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
-- Attributes
G2L["9f"]:SetAttribute([[Label]], true);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Label.Frame.UICorner
G2L["a0"] = Instance.new("UICorner", G2L["9f"]);
G2L["a0"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Label.Frame.TextLabel
G2L["a1"] = Instance.new("TextLabel", G2L["9f"]);
G2L["a1"]["TextWrapped"] = true;
G2L["a1"]["BorderSizePixel"] = 0;
G2L["a1"]["TextScaled"] = true;
G2L["a1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a1"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["a1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["a1"]["TextSize"] = 14;
G2L["a1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a1"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["a1"]["Size"] = UDim2.new(0.8226743936538696, 0, 0.6129032373428345, 0);
G2L["a1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a1"]["BackgroundTransparency"] = 1;
G2L["a1"]["Position"] = UDim2.new(0.4399999976158142, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Label.Frame.UIGradient
G2L["a2"] = Instance.new("UIGradient", G2L["9f"]);
G2L["a2"]["Rotation"] = 55;
G2L["a2"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(195, 195, 195))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.OptionDropdown
G2L["a3"] = Instance.new("TextButton", G2L["66"]);
G2L["a3"]["BorderSizePixel"] = 0;
G2L["a3"]["AutoButtonColor"] = false;
G2L["a3"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["a3"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
G2L["a3"]["TextSize"] = 14;
G2L["a3"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["a3"]["TextColor3"] = Color3.fromRGB(191, 191, 191);
G2L["a3"]["Visible"] = false;
G2L["a3"]["Size"] = UDim2.new(1, 0, 0, 21);
G2L["a3"]["Name"] = [[OptionDropdown]];
G2L["a3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a3"]["Text"] = [[Option]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.OptionDropdown.UIGradient
G2L["a4"] = Instance.new("UIGradient", G2L["a3"]);
G2L["a4"]["Rotation"] = 55;
G2L["a4"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(128, 128, 128))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.OptionDropdown.UIPadding
G2L["a5"] = Instance.new("UIPadding", G2L["a3"]);
G2L["a5"]["PaddingLeft"] = UDim.new(0, 6);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Dropdown
G2L["a6"] = Instance.new("Frame", G2L["66"]);
G2L["a6"]["BorderSizePixel"] = 0;
G2L["a6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a6"]["BackgroundTransparency"] = 1;
G2L["a6"]["Size"] = UDim2.new(1, 0, 0, 39);
G2L["a6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a6"]["Position"] = UDim2.new(9.046712534654944e-08, 0, 0, 0);
G2L["a6"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["a6"]["Visible"] = false;
G2L["a6"]["Name"] = [[Dropdown]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Dropdown.Frame
G2L["a7"] = Instance.new("TextButton", G2L["a6"]);
G2L["a7"]["BorderSizePixel"] = 0;
G2L["a7"]["AutoButtonColor"] = false;
G2L["a7"]["BackgroundColor3"] = Color3.fromRGB(21, 21, 21);
G2L["a7"]["Selectable"] = false;
G2L["a7"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["a7"]["Size"] = UDim2.new(0.9599999785423279, 0, 0, 32);
G2L["a7"]["Name"] = [[Frame]];
G2L["a7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a7"]["Text"] = [[]];
G2L["a7"]["Position"] = UDim2.new(0.5, 0, 0, 19);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Dropdown.Frame.UICorner
G2L["a8"] = Instance.new("UICorner", G2L["a7"]);
G2L["a8"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Dropdown.Frame.UIGradient
G2L["a9"] = Instance.new("UIGradient", G2L["a7"]);
G2L["a9"]["Rotation"] = 55;
G2L["a9"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(195, 195, 195))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Dropdown.Frame.Select
G2L["aa"] = Instance.new("TextButton", G2L["a7"]);
G2L["aa"]["TextWrapped"] = true;
G2L["aa"]["Active"] = false;
G2L["aa"]["BorderSizePixel"] = 0;
G2L["aa"]["AutoButtonColor"] = false;
G2L["aa"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["aa"]["BackgroundColor3"] = Color3.fromRGB(35, 35, 35);
G2L["aa"]["TextSize"] = 16;
G2L["aa"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["aa"]["TextColor3"] = Color3.fromRGB(159, 159, 159);
G2L["aa"]["Selectable"] = false;
G2L["aa"]["AnchorPoint"] = Vector2.new(1, 0.5);
G2L["aa"]["Size"] = UDim2.new(0, 92, 0, 24);
G2L["aa"]["Name"] = [[Select]];
G2L["aa"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["aa"]["Text"] = [[None]];
G2L["aa"]["Position"] = UDim2.new(0.9750000238418579, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Dropdown.Frame.Select.UICorner
G2L["ab"] = Instance.new("UICorner", G2L["aa"]);
G2L["ab"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Dropdown.Frame.Select.UIGradient
G2L["ac"] = Instance.new("UIGradient", G2L["aa"]);
G2L["ac"]["Rotation"] = 55;
G2L["ac"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(195, 195, 195))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Dropdown.Frame.Select.UIPadding
G2L["ad"] = Instance.new("UIPadding", G2L["aa"]);
G2L["ad"]["PaddingLeft"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Dropdown.Frame.Select.ImageLabel
G2L["ae"] = Instance.new("ImageLabel", G2L["aa"]);
G2L["ae"]["BorderSizePixel"] = 0;
G2L["ae"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ae"]["ImageColor3"] = Color3.fromRGB(159, 159, 159);
G2L["ae"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["ae"]["Image"] = [[http://www.roblox.com/asset/?id=15390268248]];
G2L["ae"]["Size"] = UDim2.new(0.17544731497764587, 0, 0.6375312805175781, 0);
G2L["ae"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ae"]["BackgroundTransparency"] = 1;
G2L["ae"]["Position"] = UDim2.new(0.8100000023841858, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Dropdown.Frame.Select.ImageLabel.UIAspectRatioConstraint
G2L["af"] = Instance.new("UIAspectRatioConstraint", G2L["ae"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Dropdown.Frame.UIStroke
G2L["b0"] = Instance.new("UIStroke", G2L["a7"]);
G2L["b0"]["Color"] = Color3.fromRGB(255, 255, 255);
G2L["b0"]["Thickness"] = 0.8500000238418579;
G2L["b0"]["Transparency"] = 1;
G2L["b0"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Dropdown.Frame.TextLabel
G2L["b1"] = Instance.new("TextLabel", G2L["a7"]);
G2L["b1"]["TextWrapped"] = true;
G2L["b1"]["BorderSizePixel"] = 0;
G2L["b1"]["TextScaled"] = true;
G2L["b1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b1"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["b1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["b1"]["TextSize"] = 14;
G2L["b1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b1"]["Size"] = UDim2.new(0.6151160001754761, 0, 0.6129031777381897, 0);
G2L["b1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b1"]["Text"] = [[Dropdown]];
G2L["b1"]["BackgroundTransparency"] = 1;
G2L["b1"]["Position"] = UDim2.new(0.025755494832992554, 0, 0.1875, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Dropdown.SelectionFrame
G2L["b2"] = Instance.new("Frame", G2L["a6"]);
G2L["b2"]["BorderSizePixel"] = 0;
G2L["b2"]["BackgroundColor3"] = Color3.fromRGB(45, 45, 45);
G2L["b2"]["AnchorPoint"] = Vector2.new(1, 0);
G2L["b2"]["Size"] = UDim2.new(0, 92, 0, 0);
G2L["b2"]["ClipsDescendants"] = true;
G2L["b2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b2"]["Position"] = UDim2.new(0.9539999961853027, 0, 0, 31);
G2L["b2"]["Name"] = [[SelectionFrame]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Dropdown.SelectionFrame.UICorner
G2L["b3"] = Instance.new("UICorner", G2L["b2"]);
G2L["b3"]["CornerRadius"] = UDim.new(0, 5);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Dropdown.SelectionFrame.UIGradient
G2L["b4"] = Instance.new("UIGradient", G2L["b2"]);
G2L["b4"]["Rotation"] = 55;
G2L["b4"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(128, 128, 128))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Dropdown.SelectionFrame.ScrollingFrame
G2L["b5"] = Instance.new("ScrollingFrame", G2L["b2"]);
G2L["b5"]["Active"] = true;
G2L["b5"]["BorderSizePixel"] = 0;
G2L["b5"]["CanvasSize"] = UDim2.new(0, 0, 0, 1);
G2L["b5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b5"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["b5"]["BackgroundTransparency"] = 1;
G2L["b5"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["b5"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b5"]["ScrollBarThickness"] = 0;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.InsideTab.Dropdown.SelectionFrame.ScrollingFrame.UIListLayout
G2L["b6"] = Instance.new("UIListLayout", G2L["b5"]);
G2L["b6"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog
G2L["b7"] = Instance.new("Folder", G2L["65"]);
G2L["b7"]["Name"] = [[Changelog]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.PurpleToCyan
G2L["b8"] = Instance.new("Frame", G2L["b7"]);
G2L["b8"]["BorderSizePixel"] = 0;
G2L["b8"]["BackgroundColor3"] = Color3.fromRGB(246, 246, 246);
G2L["b8"]["Size"] = UDim2.new(1, 0, 0, 44);
G2L["b8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b8"]["Position"] = UDim2.new(-0.05555564537644386, 0, 0, 0);
G2L["b8"]["Visible"] = false;
G2L["b8"]["Name"] = [[PurpleToCyan]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.PurpleToCyan.UIGradient
G2L["b9"] = Instance.new("UIGradient", G2L["b8"]);
G2L["b9"]["Rotation"] = 73;
G2L["b9"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(150, 0, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 154, 178))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.PurpleToCyan.UICorner
G2L["ba"] = Instance.new("UICorner", G2L["b8"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.PurpleToCyan.Title
G2L["bb"] = Instance.new("TextLabel", G2L["b8"]);
G2L["bb"]["TextWrapped"] = true;
G2L["bb"]["BorderSizePixel"] = 0;
G2L["bb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bb"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["bb"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["bb"]["TextSize"] = 15;
G2L["bb"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bb"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["bb"]["Size"] = UDim2.new(0, 137, 0, 16);
G2L["bb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bb"]["Text"] = [[Changes]];
G2L["bb"]["Name"] = [[Title]];
G2L["bb"]["BackgroundTransparency"] = 1;
G2L["bb"]["Position"] = UDim2.new(0, 6, 0, 11);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.PurpleToCyan.Description
G2L["bc"] = Instance.new("TextLabel", G2L["b8"]);
G2L["bc"]["TextWrapped"] = true;
G2L["bc"]["LineHeight"] = 0.800000011920929;
G2L["bc"]["BorderSizePixel"] = 0;
G2L["bc"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["bc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bc"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["bc"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["bc"]["TextSize"] = 12;
G2L["bc"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bc"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["bc"]["Size"] = UDim2.new(0, 137, 0, 24);
G2L["bc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bc"]["Text"] = [[Added nothing]];
G2L["bc"]["Name"] = [[Description]];
G2L["bc"]["BackgroundTransparency"] = 1;
G2L["bc"]["Position"] = UDim2.new(0, 6, 0, 30);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.SkyblueToBlue
G2L["bd"] = Instance.new("Frame", G2L["b7"]);
G2L["bd"]["BorderSizePixel"] = 0;
G2L["bd"]["BackgroundColor3"] = Color3.fromRGB(246, 246, 246);
G2L["bd"]["Size"] = UDim2.new(1, 0, 0, 44);
G2L["bd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bd"]["Position"] = UDim2.new(-0.05555564537644386, 0, 0, 0);
G2L["bd"]["Visible"] = false;
G2L["bd"]["Name"] = [[SkyblueToBlue]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.SkyblueToBlue.UIGradient
G2L["be"] = Instance.new("UIGradient", G2L["bd"]);
G2L["be"]["Rotation"] = 73;
G2L["be"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(0, 188, 245)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 4, 178))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.SkyblueToBlue.UICorner
G2L["bf"] = Instance.new("UICorner", G2L["bd"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.SkyblueToBlue.Title
G2L["c0"] = Instance.new("TextLabel", G2L["bd"]);
G2L["c0"]["TextWrapped"] = true;
G2L["c0"]["BorderSizePixel"] = 0;
G2L["c0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c0"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["c0"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["c0"]["TextSize"] = 15;
G2L["c0"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c0"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["c0"]["Size"] = UDim2.new(0, 137, 0, 16);
G2L["c0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c0"]["Text"] = [[Changes]];
G2L["c0"]["Name"] = [[Title]];
G2L["c0"]["BackgroundTransparency"] = 1;
G2L["c0"]["Position"] = UDim2.new(0, 6, 0, 11);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.SkyblueToBlue.Description
G2L["c1"] = Instance.new("TextLabel", G2L["bd"]);
G2L["c1"]["TextWrapped"] = true;
G2L["c1"]["LineHeight"] = 0.800000011920929;
G2L["c1"]["BorderSizePixel"] = 0;
G2L["c1"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["c1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c1"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["c1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c1"]["TextSize"] = 12;
G2L["c1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c1"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["c1"]["Size"] = UDim2.new(0, 137, 0, 24);
G2L["c1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c1"]["Text"] = [[Added nothing]];
G2L["c1"]["Name"] = [[Description]];
G2L["c1"]["BackgroundTransparency"] = 1;
G2L["c1"]["Position"] = UDim2.new(0, 6, 0, 30);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.CyanToBlue
G2L["c2"] = Instance.new("Frame", G2L["b7"]);
G2L["c2"]["BorderSizePixel"] = 0;
G2L["c2"]["BackgroundColor3"] = Color3.fromRGB(246, 246, 246);
G2L["c2"]["Size"] = UDim2.new(1, 0, 0, 44);
G2L["c2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c2"]["Position"] = UDim2.new(-0.05555564537644386, 0, 0, 0);
G2L["c2"]["Visible"] = false;
G2L["c2"]["Name"] = [[CyanToBlue]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.CyanToBlue.UIGradient
G2L["c3"] = Instance.new("UIGradient", G2L["c2"]);
G2L["c3"]["Rotation"] = 73;
G2L["c3"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(0, 245, 208)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 100, 221))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.CyanToBlue.UICorner
G2L["c4"] = Instance.new("UICorner", G2L["c2"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.CyanToBlue.Title
G2L["c5"] = Instance.new("TextLabel", G2L["c2"]);
G2L["c5"]["TextWrapped"] = true;
G2L["c5"]["BorderSizePixel"] = 0;
G2L["c5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c5"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["c5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["c5"]["TextSize"] = 15;
G2L["c5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c5"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["c5"]["Size"] = UDim2.new(0, 137, 0, 16);
G2L["c5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c5"]["Text"] = [[Changes]];
G2L["c5"]["Name"] = [[Title]];
G2L["c5"]["BackgroundTransparency"] = 1;
G2L["c5"]["Position"] = UDim2.new(0, 6, 0, 11);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.CyanToBlue.Description
G2L["c6"] = Instance.new("TextLabel", G2L["c2"]);
G2L["c6"]["TextWrapped"] = true;
G2L["c6"]["LineHeight"] = 0.800000011920929;
G2L["c6"]["BorderSizePixel"] = 0;
G2L["c6"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["c6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c6"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["c6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c6"]["TextSize"] = 12;
G2L["c6"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c6"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["c6"]["Size"] = UDim2.new(0, 137, 0, 24);
G2L["c6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c6"]["Text"] = [[Added nothing]];
G2L["c6"]["Name"] = [[Description]];
G2L["c6"]["BackgroundTransparency"] = 1;
G2L["c6"]["Position"] = UDim2.new(0, 6, 0, 30);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.RedToPink
G2L["c7"] = Instance.new("Frame", G2L["b7"]);
G2L["c7"]["BorderSizePixel"] = 0;
G2L["c7"]["BackgroundColor3"] = Color3.fromRGB(246, 246, 246);
G2L["c7"]["Size"] = UDim2.new(1, 0, 0, 44);
G2L["c7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c7"]["Position"] = UDim2.new(-0.05555564537644386, 0, 0, 0);
G2L["c7"]["Visible"] = false;
G2L["c7"]["Name"] = [[RedToPink]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.RedToPink.UIGradient
G2L["c8"] = Instance.new("UIGradient", G2L["c7"]);
G2L["c8"]["Rotation"] = 73;
G2L["c8"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 0, 5)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(226, 0, 215))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.RedToPink.UICorner
G2L["c9"] = Instance.new("UICorner", G2L["c7"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.RedToPink.Title
G2L["ca"] = Instance.new("TextLabel", G2L["c7"]);
G2L["ca"]["TextWrapped"] = true;
G2L["ca"]["BorderSizePixel"] = 0;
G2L["ca"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ca"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["ca"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["ca"]["TextSize"] = 15;
G2L["ca"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ca"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["ca"]["Size"] = UDim2.new(0, 137, 0, 16);
G2L["ca"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ca"]["Text"] = [[Changes]];
G2L["ca"]["Name"] = [[Title]];
G2L["ca"]["BackgroundTransparency"] = 1;
G2L["ca"]["Position"] = UDim2.new(0, 6, 0, 11);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.RedToPink.Description
G2L["cb"] = Instance.new("TextLabel", G2L["c7"]);
G2L["cb"]["TextWrapped"] = true;
G2L["cb"]["LineHeight"] = 0.800000011920929;
G2L["cb"]["BorderSizePixel"] = 0;
G2L["cb"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["cb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["cb"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["cb"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["cb"]["TextSize"] = 12;
G2L["cb"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["cb"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["cb"]["Size"] = UDim2.new(0, 137, 0, 24);
G2L["cb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["cb"]["Text"] = [[Added nothing]];
G2L["cb"]["Name"] = [[Description]];
G2L["cb"]["BackgroundTransparency"] = 1;
G2L["cb"]["Position"] = UDim2.new(0, 6, 0, 30);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.RedToOrange
G2L["cc"] = Instance.new("Frame", G2L["b7"]);
G2L["cc"]["BorderSizePixel"] = 0;
G2L["cc"]["BackgroundColor3"] = Color3.fromRGB(246, 246, 246);
G2L["cc"]["Size"] = UDim2.new(1, 0, 0, 44);
G2L["cc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["cc"]["Position"] = UDim2.new(-0.05555564537644386, 0, 0, 0);
G2L["cc"]["Visible"] = false;
G2L["cc"]["Name"] = [[RedToOrange]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.RedToOrange.UIGradient
G2L["cd"] = Instance.new("UIGradient", G2L["cc"]);
G2L["cd"]["Rotation"] = 73;
G2L["cd"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 0, 0)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(255, 239, 0))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.RedToOrange.UICorner
G2L["ce"] = Instance.new("UICorner", G2L["cc"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.RedToOrange.Title
G2L["cf"] = Instance.new("TextLabel", G2L["cc"]);
G2L["cf"]["TextWrapped"] = true;
G2L["cf"]["BorderSizePixel"] = 0;
G2L["cf"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["cf"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["cf"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["cf"]["TextSize"] = 15;
G2L["cf"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["cf"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["cf"]["Size"] = UDim2.new(0, 137, 0, 16);
G2L["cf"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["cf"]["Text"] = [[Changes]];
G2L["cf"]["Name"] = [[Title]];
G2L["cf"]["BackgroundTransparency"] = 1;
G2L["cf"]["Position"] = UDim2.new(0, 6, 0, 11);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.RedToOrange.Description
G2L["d0"] = Instance.new("TextLabel", G2L["cc"]);
G2L["d0"]["TextWrapped"] = true;
G2L["d0"]["LineHeight"] = 0.800000011920929;
G2L["d0"]["BorderSizePixel"] = 0;
G2L["d0"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["d0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d0"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["d0"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["d0"]["TextSize"] = 12;
G2L["d0"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d0"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["d0"]["Size"] = UDim2.new(0, 137, 0, 24);
G2L["d0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d0"]["Text"] = [[Added Nothing]];
G2L["d0"]["Name"] = [[Description]];
G2L["d0"]["BackgroundTransparency"] = 1;
G2L["d0"]["Position"] = UDim2.new(0, 6, 0, 30);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.BlueToPurple
G2L["d1"] = Instance.new("Frame", G2L["b7"]);
G2L["d1"]["BorderSizePixel"] = 0;
G2L["d1"]["BackgroundColor3"] = Color3.fromRGB(246, 246, 246);
G2L["d1"]["Size"] = UDim2.new(1, 0, 0, 44);
G2L["d1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d1"]["Position"] = UDim2.new(-0.05555564537644386, 0, 0, 0);
G2L["d1"]["Visible"] = false;
G2L["d1"]["Name"] = [[BlueToPurple]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.BlueToPurple.UIGradient
G2L["d2"] = Instance.new("UIGradient", G2L["d1"]);
G2L["d2"]["Rotation"] = 73;
G2L["d2"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(0, 111, 245)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(178, 0, 178))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.BlueToPurple.UICorner
G2L["d3"] = Instance.new("UICorner", G2L["d1"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.BlueToPurple.Title
G2L["d4"] = Instance.new("TextLabel", G2L["d1"]);
G2L["d4"]["TextWrapped"] = true;
G2L["d4"]["BorderSizePixel"] = 0;
G2L["d4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d4"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["d4"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["d4"]["TextSize"] = 15;
G2L["d4"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d4"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["d4"]["Size"] = UDim2.new(0, 137, 0, 16);
G2L["d4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d4"]["Text"] = [[Changes]];
G2L["d4"]["Name"] = [[Title]];
G2L["d4"]["BackgroundTransparency"] = 1;
G2L["d4"]["Position"] = UDim2.new(0, 6, 0, 11);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.BlueToPurple.Description
G2L["d5"] = Instance.new("TextLabel", G2L["d1"]);
G2L["d5"]["TextWrapped"] = true;
G2L["d5"]["LineHeight"] = 0.800000011920929;
G2L["d5"]["BorderSizePixel"] = 0;
G2L["d5"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["d5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d5"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["d5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["d5"]["TextSize"] = 12;
G2L["d5"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d5"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["d5"]["Size"] = UDim2.new(0, 137, 0, 24);
G2L["d5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d5"]["Text"] = [[Added nothing]];
G2L["d5"]["Name"] = [[Description]];
G2L["d5"]["BackgroundTransparency"] = 1;
G2L["d5"]["Position"] = UDim2.new(0, 6, 0, 30);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.YellowToGreen
G2L["d6"] = Instance.new("Frame", G2L["b7"]);
G2L["d6"]["BorderSizePixel"] = 0;
G2L["d6"]["BackgroundColor3"] = Color3.fromRGB(246, 246, 246);
G2L["d6"]["Size"] = UDim2.new(1, 0, 0, 44);
G2L["d6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d6"]["Position"] = UDim2.new(-0.05555564537644386, 0, 0, 0);
G2L["d6"]["Visible"] = false;
G2L["d6"]["Name"] = [[YellowToGreen]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.YellowToGreen.UIGradient
G2L["d7"] = Instance.new("UIGradient", G2L["d6"]);
G2L["d7"]["Rotation"] = 73;
G2L["d7"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(245, 225, 0)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 204, 48))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.YellowToGreen.UICorner
G2L["d8"] = Instance.new("UICorner", G2L["d6"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.YellowToGreen.Title
G2L["d9"] = Instance.new("TextLabel", G2L["d6"]);
G2L["d9"]["TextWrapped"] = true;
G2L["d9"]["BorderSizePixel"] = 0;
G2L["d9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d9"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["d9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["d9"]["TextSize"] = 15;
G2L["d9"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d9"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["d9"]["Size"] = UDim2.new(0, 137, 0, 16);
G2L["d9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d9"]["Text"] = [[Changes]];
G2L["d9"]["Name"] = [[Title]];
G2L["d9"]["BackgroundTransparency"] = 1;
G2L["d9"]["Position"] = UDim2.new(0, 6, 0, 11);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.YellowToGreen.Description
G2L["da"] = Instance.new("TextLabel", G2L["d6"]);
G2L["da"]["TextWrapped"] = true;
G2L["da"]["LineHeight"] = 0.800000011920929;
G2L["da"]["BorderSizePixel"] = 0;
G2L["da"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["da"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["da"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["da"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["da"]["TextSize"] = 12;
G2L["da"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["da"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["da"]["Size"] = UDim2.new(0, 137, 0, 24);
G2L["da"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["da"]["Text"] = [[Added nothing]];
G2L["da"]["Name"] = [[Description]];
G2L["da"]["BackgroundTransparency"] = 1;
G2L["da"]["Position"] = UDim2.new(0, 6, 0, 30);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.LimeToGreen
G2L["db"] = Instance.new("Frame", G2L["b7"]);
G2L["db"]["BorderSizePixel"] = 0;
G2L["db"]["BackgroundColor3"] = Color3.fromRGB(246, 246, 246);
G2L["db"]["Size"] = UDim2.new(1, 0, 0, 44);
G2L["db"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["db"]["Position"] = UDim2.new(-0.05555564537644386, 0, 0, 0);
G2L["db"]["Visible"] = false;
G2L["db"]["Name"] = [[LimeToGreen]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.LimeToGreen.UIGradient
G2L["dc"] = Instance.new("UIGradient", G2L["db"]);
G2L["dc"]["Rotation"] = 73;
G2L["dc"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(0, 245, 176)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 178, 39))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.LimeToGreen.UICorner
G2L["dd"] = Instance.new("UICorner", G2L["db"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.LimeToGreen.Title
G2L["de"] = Instance.new("TextLabel", G2L["db"]);
G2L["de"]["TextWrapped"] = true;
G2L["de"]["BorderSizePixel"] = 0;
G2L["de"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["de"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["de"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["de"]["TextSize"] = 15;
G2L["de"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["de"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["de"]["Size"] = UDim2.new(0, 137, 0, 16);
G2L["de"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["de"]["Text"] = [[Changes]];
G2L["de"]["Name"] = [[Title]];
G2L["de"]["BackgroundTransparency"] = 1;
G2L["de"]["Position"] = UDim2.new(0, 6, 0, 11);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.Changelog.LimeToGreen.Description
G2L["df"] = Instance.new("TextLabel", G2L["db"]);
G2L["df"]["TextWrapped"] = true;
G2L["df"]["LineHeight"] = 0.800000011920929;
G2L["df"]["BorderSizePixel"] = 0;
G2L["df"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["df"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["df"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["df"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["df"]["TextSize"] = 12;
G2L["df"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["df"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["df"]["Size"] = UDim2.new(0, 137, 0, 24);
G2L["df"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["df"]["Text"] = [[Added nothing]];
G2L["df"]["Name"] = [[Description]];
G2L["df"]["BackgroundTransparency"] = 1;
G2L["df"]["Position"] = UDim2.new(0, 6, 0, 30);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.ButtonFrame
G2L["e0"] = Instance.new("Frame", G2L["65"]);
G2L["e0"]["BorderSizePixel"] = 0;
G2L["e0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e0"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["e0"]["BackgroundTransparency"] = 1;
G2L["e0"]["Size"] = UDim2.new(0.98591548204422, 0, 0.17563045024871826, 0);
G2L["e0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e0"]["Position"] = UDim2.new(0.5, 0, 0.08781522512435913, 0);
G2L["e0"]["Visible"] = false;
G2L["e0"]["Name"] = [[ButtonFrame]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.ButtonFrame.ButtonFrame
G2L["e1"] = Instance.new("TextButton", G2L["e0"]);
G2L["e1"]["Active"] = false;
G2L["e1"]["BorderSizePixel"] = 0;
G2L["e1"]["AutoButtonColor"] = false;
G2L["e1"]["BackgroundColor3"] = Color3.fromRGB(39, 39, 39);
G2L["e1"]["Selectable"] = false;
G2L["e1"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["e1"]["Size"] = UDim2.new(0, 126, 0, 32);
G2L["e1"]["Name"] = [[ButtonFrame]];
G2L["e1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e1"]["Text"] = [[]];
G2L["e1"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.ButtonFrame.ButtonFrame.TextButton
G2L["e2"] = Instance.new("TextLabel", G2L["e1"]);
G2L["e2"]["TextWrapped"] = true;
G2L["e2"]["BorderSizePixel"] = 0;
G2L["e2"]["TextScaled"] = true;
G2L["e2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e2"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["e2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["e2"]["Selectable"] = true;
G2L["e2"]["TextSize"] = 14;
G2L["e2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e2"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["e2"]["Size"] = UDim2.new(0.6571428775787354, 0, 0.5483871102333069, 0);
G2L["e2"]["Active"] = true;
G2L["e2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e2"]["Text"] = [[Autofarm]];
G2L["e2"]["Name"] = [[TextButton]];
G2L["e2"]["BackgroundTransparency"] = 1;
G2L["e2"]["Position"] = UDim2.new(0.5799999833106995, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.ButtonFrame.ButtonFrame.ImageFrame
G2L["e3"] = Instance.new("Frame", G2L["e1"]);
G2L["e3"]["BorderSizePixel"] = 0;
G2L["e3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e3"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["e3"]["Size"] = UDim2.new(0.16428571939468384, 0, 0.7419354915618896, 0);
G2L["e3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e3"]["Position"] = UDim2.new(0.11999999731779099, 0, 0.5, 0);
G2L["e3"]["Name"] = [[ImageFrame]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.ButtonFrame.ButtonFrame.ImageFrame.UICorner
G2L["e4"] = Instance.new("UICorner", G2L["e3"]);
G2L["e4"]["CornerRadius"] = UDim.new(0, 3);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.ButtonFrame.ButtonFrame.ImageFrame.UIAspectRatioConstraint
G2L["e5"] = Instance.new("UIAspectRatioConstraint", G2L["e3"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.ButtonFrame.ButtonFrame.ImageFrame.UIGradient
G2L["e6"] = Instance.new("UIGradient", G2L["e3"]);
G2L["e6"]["Rotation"] = 42;
G2L["e6"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(107, 107, 107))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.ButtonFrame.ButtonFrame.ImageFrame.ImageLabel
G2L["e7"] = Instance.new("ImageLabel", G2L["e3"]);
G2L["e7"]["BorderSizePixel"] = 0;
G2L["e7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e7"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["e7"]["Image"] = [[rbxassetid://14122651741]];
G2L["e7"]["Size"] = UDim2.new(0.8999999761581421, 0, 0.8999999761581421, 0);
G2L["e7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e7"]["BackgroundTransparency"] = 1;
G2L["e7"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.ButtonFrame.ButtonFrame.ImageFrame.ImageLabel.UICorner
G2L["e8"] = Instance.new("UICorner", G2L["e7"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.ButtonFrame.ButtonFrame.UICorner
G2L["e9"] = Instance.new("UICorner", G2L["e1"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.ButtonFrame.ButtonFrame.UIAspectRatioConstraint
G2L["ea"] = Instance.new("UIAspectRatioConstraint", G2L["e1"]);
G2L["ea"]["AspectRatio"] = 3.996608257293701;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.ButtonFrame.ButtonFrame.UIGradient
G2L["eb"] = Instance.new("UIGradient", G2L["e1"]);
G2L["eb"]["Rotation"] = 55;
G2L["eb"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(173, 173, 173))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.ScrollingTab
G2L["ec"] = Instance.new("ScrollingFrame", G2L["65"]);
G2L["ec"]["Active"] = true;
G2L["ec"]["BorderSizePixel"] = 0;
G2L["ec"]["TopImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];
G2L["ec"]["ScrollBarImageTransparency"] = 0.5;
G2L["ec"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ec"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["ec"]["BackgroundTransparency"] = 1;
G2L["ec"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["ec"]["ScrollBarImageColor3"] = Color3.fromRGB(151, 151, 151);
G2L["ec"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ec"]["ScrollBarThickness"] = 6;
G2L["ec"]["Visible"] = false;
G2L["ec"]["Name"] = [[ScrollingTab]];
G2L["ec"]["BottomImage"] = [[rbxasset://textures/ui/Scroll/scroll-middle.png]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.PremadeLibs.ScrollingTab.UIListLayout
G2L["ed"] = Instance.new("UIListLayout", G2L["ec"]);
G2L["ed"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Intro
G2L["ee"] = Instance.new("Frame", G2L["3"]);
G2L["ee"]["BorderSizePixel"] = 0;
G2L["ee"]["BackgroundColor3"] = Color3.fromRGB(11, 11, 11);
G2L["ee"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["ee"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["ee"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ee"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
G2L["ee"]["Visible"] = false;
G2L["ee"]["Name"] = [[Intro]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Intro.UICorner
G2L["ef"] = Instance.new("UICorner", G2L["ee"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Intro.UIGradient
G2L["f0"] = Instance.new("UIGradient", G2L["ee"]);
G2L["f0"]["Rotation"] = 55;
G2L["f0"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(122, 122, 122))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Intro.Title
G2L["f1"] = Instance.new("TextLabel", G2L["ee"]);
G2L["f1"]["TextWrapped"] = true;
G2L["f1"]["BorderSizePixel"] = 0;
G2L["f1"]["TextScaled"] = true;
G2L["f1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["f1"]["TextSize"] = 14;
G2L["f1"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f1"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["f1"]["Size"] = UDim2.new(0.4320269227027893, 0, 0.0993243008852005, 0);
G2L["f1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f1"]["Text"] = [[Ganteng Hub]];
G2L["f1"]["Name"] = [[Title]];
G2L["f1"]["BackgroundTransparency"] = 1;
G2L["f1"]["Position"] = UDim2.new(0.49952688813209534, 0, 0.4314188063144684, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Intro.ProgressBar
G2L["f2"] = Instance.new("Frame", G2L["ee"]);
G2L["f2"]["BorderSizePixel"] = 0;
G2L["f2"]["BackgroundColor3"] = Color3.fromRGB(35, 35, 35);
G2L["f2"]["Size"] = UDim2.new(0.4169960618019104, 0, 0.0439189188182354, 0);
G2L["f2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f2"]["Position"] = UDim2.new(0.2905140221118927, 0, 0.5081080794334412, 0);
G2L["f2"]["Name"] = [[ProgressBar]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Intro.ProgressBar.UICorner
G2L["f3"] = Instance.new("UICorner", G2L["f2"]);
G2L["f3"]["CornerRadius"] = UDim.new(100, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Intro.ProgressBar.UIGradient
G2L["f4"] = Instance.new("UIGradient", G2L["f2"]);
G2L["f4"]["Rotation"] = 55;
G2L["f4"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(178, 178, 178))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Intro.ProgressBar.Fill
G2L["f5"] = Instance.new("Frame", G2L["f2"]);
G2L["f5"]["BorderSizePixel"] = 0;
G2L["f5"]["BackgroundColor3"] = Color3.fromRGB(98, 98, 98);
G2L["f5"]["Size"] = UDim2.new(0, 0, 1, 0);
G2L["f5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f5"]["Name"] = [[Fill]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Intro.ProgressBar.Fill.UICorner
G2L["f6"] = Instance.new("UICorner", G2L["f5"]);
G2L["f6"]["CornerRadius"] = UDim.new(100, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Intro.ProgressBar.Fill.UIGradient
G2L["f7"] = Instance.new("UIGradient", G2L["f5"]);
G2L["f7"]["Rotation"] = 55;
G2L["f7"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(178, 178, 178))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Intro.Description
G2L["f8"] = Instance.new("TextLabel", G2L["ee"]);
G2L["f8"]["TextWrapped"] = true;
G2L["f8"]["BorderSizePixel"] = 0;
G2L["f8"]["TextScaled"] = true;
G2L["f8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Light, Enum.FontStyle.Italic);
G2L["f8"]["TextSize"] = 14;
G2L["f8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f8"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["f8"]["Size"] = UDim2.new(0.4320269227027893, 0, 0.04864872992038727, 0);
G2L["f8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f8"]["Text"] = [[We are on the way, please wait...]];
G2L["f8"]["Name"] = [[Description]];
G2L["f8"]["BackgroundTransparency"] = 1;
G2L["f8"]["Position"] = UDim2.new(0.49952688813209534, 0, 0.605405330657959, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Intro.PercentProgress
G2L["f9"] = Instance.new("TextLabel", G2L["ee"]);
G2L["f9"]["TextWrapped"] = true;
G2L["f9"]["BorderSizePixel"] = 0;
G2L["f9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f9"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["f9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["f9"]["TextSize"] = 15;
G2L["f9"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f9"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["f9"]["Size"] = UDim2.new(0.10597319155931473, 0, 0.04864872992038727, 0);
G2L["f9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f9"]["Text"] = [[0%]];
G2L["f9"]["Name"] = [[PercentProgress]];
G2L["f9"]["BackgroundTransparency"] = 1;
G2L["f9"]["Position"] = UDim2.new(0.7685270309448242, 0, 0.5277026295661926, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Warning
G2L["fa"] = Instance.new("Frame", G2L["3"]);
G2L["fa"]["BorderSizePixel"] = 0;
G2L["fa"]["BackgroundColor3"] = Color3.fromRGB(11, 11, 11);
G2L["fa"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["fa"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["fa"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["fa"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
G2L["fa"]["Visible"] = false;
G2L["fa"]["Name"] = [[Warning]];

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Warning.UICorner
G2L["fb"] = Instance.new("UICorner", G2L["fa"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Warning.UIGradient
G2L["fc"] = Instance.new("UIGradient", G2L["fa"]);
G2L["fc"]["Rotation"] = 55;
G2L["fc"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(122, 122, 122))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Warning.Title
G2L["fd"] = Instance.new("TextLabel", G2L["fa"]);
G2L["fd"]["TextWrapped"] = true;
G2L["fd"]["BorderSizePixel"] = 0;
G2L["fd"]["TextScaled"] = true;
G2L["fd"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["fd"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["fd"]["TextSize"] = 14;
G2L["fd"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["fd"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["fd"]["Size"] = UDim2.new(0.4320269227027893, 0, 0.0993243008852005, 0);
G2L["fd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["fd"]["Text"] = [[Warning!]];
G2L["fd"]["Name"] = [[Title]];
G2L["fd"]["BackgroundTransparency"] = 1;
G2L["fd"]["Position"] = UDim2.new(0.4999999701976776, 0, 0.38810813426971436, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Warning.Description
G2L["fe"] = Instance.new("TextLabel", G2L["fa"]);
G2L["fe"]["TextWrapped"] = true;
G2L["fe"]["BorderSizePixel"] = 0;
G2L["fe"]["TextScaled"] = true;
G2L["fe"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["fe"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Light, Enum.FontStyle.Italic);
G2L["fe"]["TextSize"] = 14;
G2L["fe"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["fe"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["fe"]["Size"] = UDim2.new(0.5966656804084778, 0, 0.14590030908584595, 0);
G2L["fe"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["fe"]["Text"] = [[You are about to close Ganteng Hub, and you will need to re-execute Ganteng Hub to use it again. Are you sure?]];
G2L["fe"]["Name"] = [[Description]];
G2L["fe"]["BackgroundTransparency"] = 1;
G2L["fe"]["Position"] = UDim2.new(0.49884232878685, 0, 0.5114604234695435, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Warning.Yes
G2L["ff"] = Instance.new("TextButton", G2L["fa"]);
G2L["ff"]["BorderSizePixel"] = 0;
G2L["ff"]["AutoButtonColor"] = false;
G2L["ff"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
G2L["ff"]["TextSize"] = 22;
G2L["ff"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["ff"]["TextColor3"] = Color3.fromRGB(212, 212, 212);
G2L["ff"]["Size"] = UDim2.new(0.20948617160320282, 0, 0.10810811072587967, 0);
G2L["ff"]["Name"] = [[Yes]];
G2L["ff"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ff"]["Text"] = [[Yes]];
G2L["ff"]["Position"] = UDim2.new(0.27470362186431885, 0, 0.6216219067573547, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Warning.Yes.UICorner
G2L["100"] = Instance.new("UICorner", G2L["ff"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Warning.Yes.UIGradient
G2L["101"] = Instance.new("UIGradient", G2L["ff"]);
G2L["101"]["Rotation"] = 55;
G2L["101"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(122, 122, 122))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Warning.Yes.UIStroke
G2L["102"] = Instance.new("UIStroke", G2L["ff"]);
G2L["102"]["Color"] = Color3.fromRGB(142, 142, 142);
G2L["102"]["Transparency"] = 1;
G2L["102"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Warning.No
G2L["103"] = Instance.new("TextButton", G2L["fa"]);
G2L["103"]["BorderSizePixel"] = 0;
G2L["103"]["AutoButtonColor"] = false;
G2L["103"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
G2L["103"]["TextSize"] = 22;
G2L["103"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["103"]["TextColor3"] = Color3.fromRGB(212, 212, 212);
G2L["103"]["Size"] = UDim2.new(0.20948617160320282, 0, 0.10810811072587967, 0);
G2L["103"]["Name"] = [[No]];
G2L["103"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["103"]["Text"] = [[No]];
G2L["103"]["Position"] = UDim2.new(0.5098814964294434, 0, 0.6216219067573547, 0);

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Warning.No.UICorner
G2L["104"] = Instance.new("UICorner", G2L["103"]);


-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Warning.No.UIGradient
G2L["105"] = Instance.new("UIGradient", G2L["103"]);
G2L["105"]["Rotation"] = 55;
G2L["105"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(122, 122, 122))};

-- ServerStorage.GantengLib.DropShadowHolder.MainFrame.Warning.No.UIStroke
G2L["106"] = Instance.new("UIStroke", G2L["103"]);
G2L["106"]["Color"] = Color3.fromRGB(142, 142, 142);
G2L["106"]["Transparency"] = 1;
G2L["106"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;

-- ServerStorage.GantengLib.DropShadowHolder.DropShadow
G2L["107"] = Instance.new("ImageLabel", G2L["2"]);
G2L["107"]["ZIndex"] = 0;
G2L["107"]["BorderSizePixel"] = 0;
G2L["107"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
G2L["107"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["107"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["107"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["107"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["107"]["Image"] = [[rbxassetid://6014261993]];
G2L["107"]["Size"] = UDim2.new(1.0928853750228882, 0, 1.1587837934494019, 0);
G2L["107"]["Name"] = [[DropShadow]];
G2L["107"]["BackgroundTransparency"] = 1;
G2L["107"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- ServerStorage.GantengLib.DropShadowHolder.DropShadow.UIAspectRatioConstraint
G2L["108"] = Instance.new("UIAspectRatioConstraint", G2L["107"]);
G2L["108"]["AspectRatio"] = 1.6122448444366455;

-- ServerStorage.GantengLib.InfoFrame
G2L["109"] = Instance.new("Frame", G2L["1"]);
G2L["109"]["BorderSizePixel"] = 0;
G2L["109"]["BackgroundColor3"] = Color3.fromRGB(43, 43, 43);
G2L["109"]["AnchorPoint"] = Vector2.new(0, 1);
G2L["109"]["Size"] = UDim2.new(0, 141, 0, 49);
G2L["109"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["109"]["Position"] = UDim2.new(0, 0, -0.30000001192092896, 0);
G2L["109"]["AutomaticSize"] = Enum.AutomaticSize.XY;
G2L["109"]["Name"] = [[InfoFrame]];

-- ServerStorage.GantengLib.InfoFrame.UICorner
G2L["10a"] = Instance.new("UICorner", G2L["109"]);


-- ServerStorage.GantengLib.InfoFrame.UIGradient
G2L["10b"] = Instance.new("UIGradient", G2L["109"]);
G2L["10b"]["Rotation"] = 55;
G2L["10b"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(169, 169, 169))};

-- ServerStorage.GantengLib.InfoFrame.Title
G2L["10c"] = Instance.new("TextLabel", G2L["109"]);
G2L["10c"]["BorderSizePixel"] = 0;
G2L["10c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["10c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["10c"]["TextSize"] = 14;
G2L["10c"]["TextColor3"] = Color3.fromRGB(204, 204, 204);
G2L["10c"]["AutomaticSize"] = Enum.AutomaticSize.X;
G2L["10c"]["Size"] = UDim2.new(0, 133, 0, 14);
G2L["10c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10c"]["Text"] = [[Title]];
G2L["10c"]["Name"] = [[Title]];
G2L["10c"]["BackgroundTransparency"] = 1;
G2L["10c"]["Position"] = UDim2.new(0, 8, 0, 3);

-- ServerStorage.GantengLib.InfoFrame.Frame
G2L["10d"] = Instance.new("Frame", G2L["109"]);
G2L["10d"]["BorderSizePixel"] = 0;
G2L["10d"]["BackgroundColor3"] = Color3.fromRGB(187, 187, 187);
G2L["10d"]["AnchorPoint"] = Vector2.new(0, 0.5);
G2L["10d"]["Size"] = UDim2.new(0.8999999761581421, 0, 0, 2);
G2L["10d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10d"]["Position"] = UDim2.new(0, 7, 0, 20);

-- ServerStorage.GantengLib.InfoFrame.Description
G2L["10e"] = Instance.new("TextLabel", G2L["109"]);
G2L["10e"]["BorderSizePixel"] = 0;
G2L["10e"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["10e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["10e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["10e"]["TextSize"] = 12;
G2L["10e"]["TextColor3"] = Color3.fromRGB(204, 204, 204);
G2L["10e"]["AutomaticSize"] = Enum.AutomaticSize.XY;
G2L["10e"]["Size"] = UDim2.new(0, 133, 0, 28);
G2L["10e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10e"]["Text"] = [[This is a description.]];
G2L["10e"]["Name"] = [[Description]];
G2L["10e"]["BackgroundTransparency"] = 1;
G2L["10e"]["Position"] = UDim2.new(0, 8, 0, 21);

-- ServerStorage.GantengLib.InfoFrame.DropShadowHolder
G2L["10f"] = Instance.new("Frame", G2L["109"]);
G2L["10f"]["ZIndex"] = 0;
G2L["10f"]["BorderSizePixel"] = 0;
G2L["10f"]["BackgroundTransparency"] = 1;
G2L["10f"]["Size"] = UDim2.new(0, 141, 0, 49);
G2L["10f"]["Name"] = [[DropShadowHolder]];

-- ServerStorage.GantengLib.InfoFrame.DropShadowHolder.DropShadow
G2L["110"] = Instance.new("ImageLabel", G2L["10f"]);
G2L["110"]["ZIndex"] = 0;
G2L["110"]["BorderSizePixel"] = 0;
G2L["110"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
G2L["110"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["110"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["110"]["ImageTransparency"] = 0.5;
G2L["110"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["110"]["Image"] = [[rbxassetid://6014261993]];
G2L["110"]["Size"] = UDim2.new(1, 47, 1, 47);
G2L["110"]["Name"] = [[DropShadow]];
G2L["110"]["BackgroundTransparency"] = 1;
G2L["110"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- ServerStorage.GantengLib.Library
G2L["111"] = Instance.new("ModuleScript", G2L["1"]);
G2L["111"]["Name"] = [[Library]];

-- ServerStorage.GantengLib.Icon
G2L["112"] = Instance.new("ImageLabel", G2L["1"]);
G2L["112"]["BorderSizePixel"] = 0;
G2L["112"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["112"]["Visible"] = false;
G2L["112"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["112"]["Image"] = [[rbxassetid://15006559003]];
G2L["112"]["Size"] = UDim2.new(0, 54, 0, 54);
G2L["112"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["112"]["Name"] = [[Icon]];
G2L["112"]["Position"] = UDim2.new(0.18727155029773712, 0, 0.16202445328235626, 0);

-- ServerStorage.GantengLib.Icon.UIAspectRatioConstraint
G2L["113"] = Instance.new("UIAspectRatioConstraint", G2L["112"]);


-- ServerStorage.GantengLib.Icon.UICorner
G2L["114"] = Instance.new("UICorner", G2L["112"]);


-- ServerStorage.GantengLib.Icon.DropShadowHolder
G2L["115"] = Instance.new("Frame", G2L["112"]);
G2L["115"]["ZIndex"] = 0;
G2L["115"]["BorderSizePixel"] = 0;
G2L["115"]["BackgroundTransparency"] = 1;
G2L["115"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["115"]["Name"] = [[DropShadowHolder]];

-- ServerStorage.GantengLib.Icon.DropShadowHolder.DropShadow
G2L["116"] = Instance.new("ImageLabel", G2L["115"]);
G2L["116"]["ZIndex"] = 0;
G2L["116"]["BorderSizePixel"] = 0;
G2L["116"]["SliceCenter"] = Rect.new(49, 49, 450, 450);
G2L["116"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["116"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["116"]["ImageTransparency"] = 0.5;
G2L["116"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["116"]["Image"] = [[rbxassetid://6014261993]];
G2L["116"]["Size"] = UDim2.new(1, 47, 1, 47);
G2L["116"]["Name"] = [[DropShadow]];
G2L["116"]["BackgroundTransparency"] = 1;
G2L["116"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- ServerStorage.GantengLib.Icon.Icon
G2L["117"] = Instance.new("ImageButton", G2L["112"]);
G2L["117"]["Active"] = false;
G2L["117"]["BorderSizePixel"] = 0;
G2L["117"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["117"]["Selectable"] = false;
G2L["117"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["117"]["Image"] = [[rbxassetid://15006559003]];
G2L["117"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["117"]["Name"] = [[Icon]];
G2L["117"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["117"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- ServerStorage.GantengLib.Icon.Icon.UICorner
G2L["118"] = Instance.new("UICorner", G2L["117"]);


-- ServerStorage.GantengLib.Icon.Icon.UIStroke
G2L["119"] = Instance.new("UIStroke", G2L["117"]);
G2L["119"]["Color"] = Color3.fromRGB(136, 136, 136);

-- Require G2L wrapper
local G2L_REQUIRE = require;
local G2L_MODULES = {};
local function require(Module:ModuleScript)
	local ModuleState = G2L_MODULES[Module];
	if ModuleState then
		if not ModuleState.Required then
			ModuleState.Required = true;
			ModuleState.Value = ModuleState.Closure();
		end
		return ModuleState.Value;
	end;
	return G2L_REQUIRE(Module);
end

G2L_MODULES[G2L["111"]] = {
	Closure = function()
		local script = G2L["111"];
		local LIBRARY = {}

		-- Services
		local UserInputService = game:GetService("UserInputService")
		local Players = game:GetService("Players")
		local TweenService = game:GetService("TweenService")
		local HttpService = game:GetService("HttpService")
		local LocalPlayer = Players.LocalPlayer

		-- Variable Shortcuts
		local Mainframe = script.Parent.DropShadowHolder.MainFrame
		local Reserved = Mainframe.PremadeLibs
		local ReservedTabs = Reserved.InsideTab
		local Mainside = Mainframe.MainSide
		local SideBar = Mainframe.SideBar
		local Tabs = Mainframe.MainSide.Tabs
		local LocalPlayerInfo = SideBar.LocalPlayerInfo
		local Intro = Mainframe.Intro
		local GuiTitle = SideBar.Title
		local Gui = script.Parent
		local Topbar = Mainside.TopBar
		local Landing = Mainside.Landing
		local Warning = Mainframe.Warning
		local InfoFrame = Gui.InfoFrame
		local ReservedChangelog = Reserved.Changelog
		-- Variables
		local ShowInfo = false
		local Maxxed = false

		local SideButtons = {}
		local MainTabs = {}
		-- MAIN FUNCTION
		local function Tween(instance, tweeninfo, propertyTable)
			local tween = TweenService:Create(instance, tweeninfo, propertyTable)
			tween:Play()
			return tween
		end


		function LIBRARY:Init(name, image, requiredLoading, Username, socials)
			local self = setmetatable({}, LIBRARY)
			script.Parent.Enabled = true
			local discord = socials.discord
			local youtube = socials.youtube

			Gui.Enabled =true
			-- Setting names
			GuiTitle.Text = name


			if requiredLoading == true then
				Intro.Visible = true
				local progressbar = Intro.ProgressBar
				local fill = progressbar.Fill
				local percentText = Intro.PercentProgress
				local percent = 0
				local intValue = Instance.new("IntValue")

				task.spawn(function()
					intValue:GetPropertyChangedSignal("Value"):Connect(function()
						percentText.Text = intValue.Value.."%"
					end)
				end)

				local function Open()
					local tween = Tween(Intro,TweenInfo.new(1,Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { Size = UDim2.fromScale(0,0)})

					tween.Completed:Connect(function()
						task.wait(0.2)
						Intro.Visible = false
					end)
				end

				function self:SetProgress(intPercent)
					percent = intPercent
					if percent > 100 or percent < 0 then
						error("Percent must between 0 - 100.")
					end
					local tween = Tween(fill, TweenInfo.new(.7, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { Size = UDim2.fromScale(intPercent/100,1)})
					Tween(intValue,TweenInfo.new(1,Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { Value = percent})

					tween.Completed:Wait()
					if percent >= 100 then
						task.wait(.75)
						Open()
					end
				end

				function self:Finish()
					local tween = Tween(fill, TweenInfo.new(.7, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { Size = UDim2.fromScale(1,1)})
					Tween(intValue,TweenInfo.new(1,Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { Value = 100})
					tween.Completed:Wait()
					Open()
				end
				function self:SetTimeOut(seconds)

				end
			end


			-- Init LocalPlayerInfo
			if Username == false then
				LocalPlayerInfo.UserName.Text = LocalPlayer.DisplayName

			elseif Username == true then
				LocalPlayerInfo.UserName.Text = "@"..LocalPlayer.Name

			end

			LocalPlayerInfo.Profile.Image = Players:GetUserThumbnailAsync(LocalPlayer.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)

			local function RefreshTime()
				if Mainframe.Parent ~= nil then
					LocalPlayerInfo.Time.Text =os.date("%H:%M:%S", os.time())
					task.wait(.5)
					RefreshTime()
				end
			end

			task.spawn(RefreshTime)




			-- idk rest of them



			local function EnableDrag(Frame)
				local dragToggle
				local dragSpeed = .25
				local dragInput
				local dragStart
				local dragPos

				local function updateInput(input)
					local Delta = input.Position - dragStart
					local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
					TweenService:Create(Frame, TweenInfo.new(.1), {Position = Position}):Play()
				end

				Frame.InputBegan:Connect(function(input)
					if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
						dragToggle = true
						dragStart = input.Position
						startPos = Frame.Position
						input.Changed:Connect(function()
							if (input.UserInputState == Enum.UserInputState.End) then
								dragToggle = false
							end
						end)
					end
				end)

				Frame.InputChanged:Connect(function(input)
					if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
						dragInput = input
					end
				end)

				game:GetService("UserInputService").InputChanged:Connect(function(input)
					if (input == dragInput and dragToggle) then
						updateInput(input)
					end
				end)
			end

			EnableDrag(script.Parent.DropShadowHolder)



			-- Topbar menu functions
			local timeout = false
			Topbar.Move.MouseButton1Click:Connect(function()
				if Maxxed == false and timeout == false then
					Maxxed = true
					timeout = true
					-- tween pos the sidebar to non visible
					Tween(SideBar, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { Position = UDim2.fromScale(-0.14, 0.5)})

					-- tween pos to full
					Tween(Mainside, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { Position = UDim2.fromScale(0, 0)})
					Tween(Mainside, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { Size = UDim2.fromScale(1,1)})


					if Topbar.SearchBar.Visible == false then
				--[[----------------------------
				This for handling if searchbar not visible, applys as alternative.
				----------------------------]]--
						Tween(Topbar.Alternative, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { Position = UDim2.new(0.326, 0,0.474, 0)})
					end


					task.wait(0.25)
					timeout = false
				elseif Maxxed == true and timeout == false then
					Maxxed = false
					timeout = true
					-- tween pos the sidebar to visible
					Tween(SideBar, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { Position = UDim2.fromScale(0.14, 0.5)})

					-- tween pos to full
					Tween(Mainside, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { Position = UDim2.fromScale(0.281, 0)})
					Tween(Mainside, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { Size = UDim2.fromScale(0.719,1)})

					if Topbar.SearchBar.Visible == false then
				--[[----------------------------
				This for handling if searchbar not visible, applys as alternative.
				----------------------------]]--
						Tween(Topbar.Alternative, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), { Position = UDim2.new(0.326, 0,-0.474, 0)})
					end

					task.wait(0.25)
					timeout = false
				end
			end)

			Topbar.ToggleInfo.MouseButton1Click:Connect(function()
				ShowInfo = not ShowInfo

				if ShowInfo == true then
					Tween(Topbar.ToggleInfo.Toggle.Filler, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 0})
				elseif ShowInfo == false then
					Tween(Topbar.ToggleInfo.Toggle.Filler, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 1})
				end
			end)

			-- Socials things
			local YoutubeButton = Landing.Infos.Socials.Youtube
			local DiscordButton = Landing.Infos.Socials.Discord

			YoutubeButton.MouseEnter:Connect(function()
				Tween(YoutubeButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Size = UDim2.new(0.504, 0,0.837, 0) })
				Tween(YoutubeButton.UIGradient, TweenInfo.new(0.8, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Rotation = 775 })
			end)
			YoutubeButton.MouseLeave:Connect(function()
				Tween(YoutubeButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Size = UDim2.new(0.459, 0,0.674, 0) })
				Tween(YoutubeButton.UIGradient, TweenInfo.new(0.7, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Rotation = 55 })

				Tween(YoutubeButton.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Thickness = 1.5})
				Tween(YoutubeButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundTransparency = 0})
			end)

			YoutubeButton.MouseButton1Down:Connect(function()
				Tween(YoutubeButton.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Thickness = 0})
				Tween(YoutubeButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundTransparency = 0.4})
			end)
			YoutubeButton.MouseButton1Up:Connect(function()
				Tween(YoutubeButton.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Thickness = 1.5})
				Tween(YoutubeButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundTransparency = 0})
			end)

			YoutubeButton.MouseButton1Click:Connect(function()
				setclipboard(youtube)
			end)

			DiscordButton.MouseEnter:Connect(function()
				Tween(DiscordButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Size = UDim2.new(0.504, 0,0.837, 0) })
				Tween(DiscordButton.UIGradient, TweenInfo.new(0.8, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Rotation = 775 })
			end)
			DiscordButton.MouseLeave:Connect(function()
				Tween(DiscordButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Size = UDim2.new(0.459, 0,0.674, 0) })
				Tween(DiscordButton.UIGradient, TweenInfo.new(0.7, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Rotation = 55 })

				Tween(DiscordButton.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Thickness = 1.5})
				Tween(DiscordButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundTransparency = 0})
			end)

			DiscordButton.MouseButton1Down:Connect(function()
				Tween(DiscordButton.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Thickness = 0})
				Tween(DiscordButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundTransparency = 0.4})
			end)
			DiscordButton.MouseButton1Up:Connect(function()
				Tween(DiscordButton.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Thickness = 1.5})
				Tween(DiscordButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundTransparency = 0})
			end)

			DiscordButton.MouseButton1Click:Connect(function()
				setclipboard(DiscordButton)
			end)

			-- TODO: i swear this so hard to make
			Topbar.SearchBar.Visible = false

			local originalProperty = {}
			originalProperty.Tabs = {}
			originalProperty.Item = {}
			originalProperty.Indexed = false
			local event

			Topbar.SearchBar.Focused:Connect(function()
				originalProperty.Indexed = true

				event = Topbar.SearchBar:GetPropertyChangedSignal("Text"):Connect(function()
					Tabs.SearchedTab.Visible = true

					for _, tab in pairs(Tabs:GetChildren()) do
						if tab ~= Tabs.SearchedTab then
							originalProperty.Tabs[tab.Name] = {}
							originalProperty.Tabs[tab.Name].Visible = tab.Visible
							tab.Visible = false
						end
					end

					-- Use an array to store the items in their original order
					local originalItems = {}

					for _, tab in pairs(Tabs:GetChildren()) do
						if tab ~= Tabs.SearchedTab then
							for _, item in pairs(tab:GetChildren()) do
								if item:IsA("Frame") and item:FindFirstChild("Frame") and not item:GetAttribute("Label") then
									if string.find(string.lower(item.Frame.TextLabel.Text), string.lower(Topbar.SearchBar.Text)) then
										originalProperty.Item[item.Name] = {}
										originalProperty.Item[item.Name]["Parent"] = item.Parent
										table.insert(originalItems, item)
									end
								end
							end
						end
					end

					-- Reparent items in their original order
					for _, item in ipairs(originalItems) do
						item.Parent = Tabs.SearchedTab
					end
				end)
			end)

			Topbar.SearchBar.FocusLost:Connect(function()
				if originalProperty.Indexed == true then
					Tabs.SearchedTab.Visible = false

					for _, tab in pairs(Tabs:GetChildren()) do
						if tab ~= Tabs.SearchedTab then
							tab.Visible = originalProperty.Tabs[tab.Name].Visible
						end
					end

					for _, item in pairs(Tabs.SearchedTab:GetChildren()) do
						if item:IsA("Frame") then
							item.Parent = originalProperty.Item[item.Name].Parent
						end
					end

					originalProperty.Indexed = false
				end
			end)





			Topbar.Minimize.MouseButton1Click:Connect(function()
				local twen = Tween(Mainframe.Parent, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Size = UDim2.new(0,0,0,0)})
				Mainframe.Parent.Parent.Icon.Visible = true
				twen.Completed:Wait()
				Mainframe.Parent.Visible = false
			end)

			Topbar.Close.MouseButton1Click:Connect(function()
				Warning.Visible = true
				Warning.Size = UDim2.new(0,0,0,0)
				Tween(Warning, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Size = UDim2.new(1,0,1,0)})
			end)

			Mainframe.Parent.Parent.Icon.Icon.MouseButton1Click:Connect(function()
				Tween(Mainframe.Parent, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Size = UDim2.new(0, 506,0, 296)})
				Mainframe.Parent.Parent.Icon.Visible = false
				Mainframe.Parent.Visible = true
			end)





			-- warning handler

			Warning.Yes.MouseButton1Click:Connect(function()
				local twen = Tween(Mainframe.Parent, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Size = UDim2.new(0,0,0,0)})
				twen.Completed:Wait()
				script.Parent:Destroy()
			end)

			Warning.Yes.MouseEnter:Connect(function()
				Tween(Warning.Yes, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.fromRGB(45,45,45)})
			end)
			Warning.Yes.MouseLeave:Connect(function()
				Tween(Warning.Yes.UIStroke, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Transparency = 1})
				Tween(Warning.Yes, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.fromRGB(35,35,35)})
			end)

			Warning.Yes.MouseButton1Down:Connect(function()
				Tween(Warning.Yes.UIStroke, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Transparency = 0})
			end)
			Warning.Yes.MouseButton1Up:Connect(function()
				Tween(Warning.Yes.UIStroke, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Transparency = 1})
			end)

			Warning.No.MouseButton1Click:Connect(function()
				local twen = Tween(Warning, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Size = UDim2.new(0,0,0,0)})
				twen.Completed:Wait()
				Warning.Visible = false
			end)

			Warning.No.MouseEnter:Connect(function()
				Tween(Warning.No, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.fromRGB(45,45,45)})
			end)
			Warning.No.MouseLeave:Connect(function()
				Tween(Warning.No.UIStroke, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Transparency = 1})
				Tween(Warning.No, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.fromRGB(35,35,35)})
			end)

			Warning.No.MouseButton1Down:Connect(function()
				Tween(Warning.No.UIStroke, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Transparency = 0})
			end)
			Warning.No.MouseButton1Up:Connect(function()
				Tween(Warning.No.UIStroke, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Transparency = 1})
			end)



			return self
		end

		function getRandomIndex(a,b)
			local str = a..b
			math.randomseed(#str)

			local generatedNumber = math.random(1, #ReservedChangelog:GetChildren())

			for i,v in pairs(ReservedChangelog:GetChildren()) do
				if i == generatedNumber then
					return v
				end
			end
		end

		function LIBRARY:AddChangelog(list)
			for title,desc in pairs(list) do
				local newCg = getRandomIndex(title, desc)

				newCg.Name = title
				newCg.Title.Text = title
				newCg.Description.Text = desc
				newCg.Visible = true
				newCg.Parent = Landing.Changelogs.ScrollingFrame
			end
		end



		function LIBRARY:CreateTab(name, icon)
			local TAB = setmetatable({}, LIBRARY)

			local newButtonTab = Reserved.ButtonFrame:Clone()
			local newTab = Reserved.ScrollingTab:Clone()

			SideButtons[name] = newButtonTab
			MainTabs[name] = newTab

			newButtonTab.Name = name
			newButtonTab.Parent = SideBar.Buttons
			newButtonTab.Visible = true

			newTab.Name = name
			newTab.Parent = Tabs

			newButtonTab.ButtonFrame.Text = name

			newButtonTab.ButtonFrame.BackgroundTransparency = 1
			newButtonTab.ButtonFrame.ImageFrame.ImageLabel.Image = icon

			newButtonTab.ButtonFrame.MouseButton1Click:Connect(function()
				Topbar.Alternative.TextLabel.Text = name
				Landing.Visible = false
				newTab.Visible = true
				Tween(newButtonTab.ButtonFrame, TweenInfo.new(0.25), { BackgroundTransparency = 0 })
				for i,v in pairs(SideButtons) do
					if v.Name ~= newButtonTab.Name then
						Tween(v.ButtonFrame, TweenInfo.new(0.25), { BackgroundTransparency = 1 })
					end
				end
				for i,v in pairs(MainTabs) do
					if v.Name ~= newButtonTab.Name then
						v.Visible = false
					end
				end
			end)
			-- THE INSIDES

			function TAB:CreateLabel(name, desc)
				local newLabel = ReservedTabs.Label:Clone()

				newLabel.Name = name
				newLabel.Parent = newTab
				newLabel.Visible = true
				newLabel.Frame.TextLabel.Text = name
			end


			function TAB:CreateButton(name, desc, callback)
				local newButton = ReservedTabs.Button:Clone()

				newButton.Name = name
				newButton.Parent = newTab
				newButton.Visible = true

				newButton.Frame.TextLabel.Text = name

				newButton.Frame.MouseEnter:Connect(function()
					Tween(newButton.Frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.fromRGB(30,30,30)})
				end)

				newButton.Frame.MouseLeave:Connect(function()
					Tween(newButton.Frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.fromRGB(20,20,20)})
					Tween(newButton.Frame.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 1})
				end)


				newButton.Frame.MouseButton1Down:Connect(function()
					Tween(newButton.Frame.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 0})
				end)
				newButton.Frame.MouseButton1Up:Connect(function()
					Tween(newButton.Frame.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 1})
				end)

				newButton.Frame.MouseButton1Click:Connect(callback)

				local Event

				newButton.Frame.MouseEnter:Connect(function(x,y)
					if ShowInfo == true then
						InfoFrame.Visible = true

						InfoFrame.Title.Text = name
						InfoFrame.Description.Text = desc
						InfoFrame.Position = UDim2.fromOffset(x,y)

						Event = newButton.Frame.MouseMoved:Connect(function(x,y)
							Tween(InfoFrame, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Position = UDim2.fromOffset(x,y)})
						end)
					end
				end)
				newButton.Frame.MouseLeave:Connect(function()
					if ShowInfo == true then
						InfoFrame.Visible = false
						Event:Disconnect()
					end
				end)
			end


			function TAB:CreateToggle(name, tbl, callback)
				local newToggle = ReservedTabs.Toggle:Clone()

				local state = tbl.state

				newToggle.Name = name
				newToggle.Parent = newTab
				newToggle.Visible = true

				newToggle.Frame.TextLabel.Text = name

				if state == false then
					newToggle.Frame.Toggle.Filler.Transparency = 1
				end

				newToggle.Frame.MouseEnter:Connect(function()
					Tween(newToggle.Frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.fromRGB(30,30,30)})
				end)

				newToggle.Frame.MouseLeave:Connect(function()
					Tween(newToggle.Frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.fromRGB(20,20,20)})
					Tween(newToggle.Frame.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 1})
				end)


				newToggle.Frame.MouseButton1Down:Connect(function()
					Tween(newToggle.Frame.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 0})
				end)
				newToggle.Frame.MouseButton1Up:Connect(function()
					Tween(newToggle.Frame.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 1})
				end)

				newToggle.Frame.MouseButton1Click:Connect(function()
					if state == true then
						state = not state
						Tween(newToggle.Frame.Toggle.Filler, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 1})
						callback(state)
					elseif state == false then
						state = not state
						Tween(newToggle.Frame.Toggle.Filler, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 0})
						callback(state)
					end

				end)


				local Event

				newToggle.Frame.MouseEnter:Connect(function(x,y)
					if ShowInfo == true then
						InfoFrame.Visible = true

						InfoFrame.Title.Text = name
						InfoFrame.Description.Text = desc
						InfoFrame.Position = UDim2.fromOffset(x,y)

						Event = newToggle.Frame.MouseMoved:Connect(function(x,y)
							Tween(InfoFrame, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Position = UDim2.fromOffset(x,y)})
						end)
					end
				end)
				newToggle.Frame.MouseLeave:Connect(function()
					if ShowInfo == true then
						InfoFrame.Visible = false
						Event:Disconnect()
					end
				end)

			end

			function TAB:CreateTextbox(name, desc, tbl, callback)
				local placeholdertext = tbl.placeholdertext
				local defaulttext = tbl.defaulttext
				local clearonfocus = tbl.clearonfocus

				local newTextbox = ReservedTabs.Textbox:Clone()
				newTextbox.Parent = newTab
				newTextbox.Name = name
				newTextbox.Visible = true

				newTextbox.Frame.Textbox.PlaceholderText = placeholdertext or ""
				newTextbox.Frame.Textbox.Text = defaulttext or ""
				newTextbox.Frame.Textbox.ClearTextOnFocus = clearonfocus or true
				newTextbox.Frame.TextLabel.Text = name

				newTextbox.Frame.MouseEnter:Connect(function()
					Tween(newTextbox.Frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.fromRGB(30,30,30)})
				end)

				newTextbox.Frame.MouseLeave:Connect(function()
					Tween(newTextbox.Frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.fromRGB(20,20,20)})

				end)

				newTextbox.Frame.Textbox.Focused:Connect(function()
					Tween(newTextbox.Frame.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 0})
				end)

				newTextbox.Frame.Textbox.FocusLost:Connect(function()
					Tween(newTextbox.Frame.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 1})
					callback(newTextbox.Frame.Textbox.Text)

				end)

				local Event

				newTextbox.Frame.MouseEnter:Connect(function(x,y)
					if ShowInfo == true then
						InfoFrame.Visible = true

						InfoFrame.Title.Text = name
						InfoFrame.Description.Text = desc
						InfoFrame.Position = UDim2.fromOffset(x,y)

						Event = newTextbox.Frame.MouseMoved:Connect(function(x,y)
							Tween(InfoFrame, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Position = UDim2.fromOffset(x,y)})
						end)
					end
				end)
				newTextbox.Frame.MouseLeave:Connect(function()
					if ShowInfo == true then
						InfoFrame.Visible = false
						Event:Disconnect()
					end
				end)
			end

			function TAB:CreateKeybind(name, desc, tbl, callback)
				local defaultkey = tbl.defaultkey
				local triggerwhilebinding = tbl.triggerwhilebinding
				local newKey = ReservedTabs.Keybind:Clone()
				local key



				local listening = false
				local event

				key = defaultkey or nil
				self.CurrentKey = key

				newKey.Name = name
				newKey.Parent = newTab
				newKey.Visible = true

				newKey.Frame.TextLabel.Text = name

				local match = defaultkey.Name:match("MouseButton(%d+)")
				newKey.Frame.Bind.Text = (match and "MB" .. match) or defaultkey.Name or "None"

				newKey.Frame.Bind.MouseButton1Click:Connect(function()
					if listening == false then
						listening = true
						Tween(newKey.Frame.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 0})
						event = UserInputService.InputBegan:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.Keyboard then

								newKey.Frame.Bind.Text = input.KeyCode.Name
								Tween(newKey.Frame.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 1})
								listening = false
								event:Disconnect()
								self.CurrentKey = input.KeyCode  -- Store the current key in the object
								if triggerwhilebinding == true then
									callback(input)
								end
							elseif input.UserInputType == Enum.UserInputType.MouseButton1 or
								input.UserInputType == Enum.UserInputType.MouseButton2 or
								input.UserInputType == Enum.UserInputType.MouseButton3 then

								local match = input.UserInputType.Name:match("MouseButton(%d+)")
								newKey.Frame.Bind.Text = (match and "MB" .. match) or input.UserInputType.Name

								Tween(newKey.Frame.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 1})
								listening = false
								event:Disconnect()
								self.CurrentKey = input.UserInputType  -- Store the current key in the object
								if triggerwhilebinding == true then
									callback(input)
								end
							end
						end)
					end
				end)

				UserInputService.InputBegan:Connect(function(input)
					if listening == false then
						if input.UserInputType == Enum.UserInputType.Keyboard then
							if input.KeyCode == TAB.CurrentKey then
								callback(input)
							end
						elseif input.UserInputType == Enum.UserInputType.MouseButton1 or
							input.UserInputType == Enum.UserInputType.MouseButton2 or
							input.UserInputType == Enum.UserInputType.MouseButton3 then
							if input.UserInputType == TAB.CurrentKey then
								callback(input)
							end
						end
					end
				end)


				newKey.Frame.MouseEnter:Connect(function()
					Tween(newKey.Frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.fromRGB(30,30,30)})
				end)

				newKey.Frame.MouseLeave:Connect(function()
					Tween(newKey.Frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.fromRGB(20,20,20)})

				end)


				local Event

				newKey.Frame.MouseEnter:Connect(function(x,y)
					if ShowInfo == true then
						InfoFrame.Visible = true

						InfoFrame.Title.Text = name
						InfoFrame.Description.Text = desc
						InfoFrame.Position = UDim2.fromOffset(x,y)

						Event = newKey.Frame.MouseMoved:Connect(function(x,y)
							Tween(InfoFrame, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Position = UDim2.fromOffset(x,y)})
						end)
					end
				end)
				newKey.Frame.MouseLeave:Connect(function()
					if ShowInfo == true then
						InfoFrame.Visible = false
						Event:Disconnect()
					end
				end)
			end

			function TAB:CreateSlider(name, desc, tbl, callback)
				local newSlider = ReservedTabs.Slider:Clone()

				local min = tbl.min
				local max = tbl.max
				local inc = tbl.inc
				local default = tbl.default

				newSlider.Parent = newTab
				newSlider.Visible = true
				newSlider.Name = name
				newSlider.Frame.TextLabel.Text = name

				local Mouse = LocalPlayer:GetMouse()
				local tweenServ = TweenService

				local Trigger = newSlider.Frame.FrameSlider.Trigger
				local Label = newSlider.Frame.Textbox
				local Fill = newSlider.Frame.FrameSlider.Fill
				local Parent = newSlider.Frame

				local perc
				local Percent
				local MouseDown = false
				local delayTw = 0.3

				local function convertValueToScale(value)
					return (value - min) / (max - min) * (1 - 0) + 0
				end


				Label.Text = tostring(default) or tostring(min)
				Fill.Size = UDim2.fromScale(convertValueToScale(default), 1)

				local function Update()
					MouseDown = true
					repeat
						task.wait()
						Percent = math.clamp((Mouse.X - Parent.AbsolutePosition.X) / Parent.AbsoluteSize.X, 0, 1)
						perc = min + (Percent * (max - min))

						-- Calculate the rounded value with the specified precision
						local roundedValue = math.round(perc / inc) * inc

						-- Clamp the value to the specified range
						perc = math.clamp(roundedValue, min, max)

						local function fixInt(number, decimalPlaces)
							local multiplier = 10 ^ decimalPlaces
							return math.floor(number * multiplier + 0.5) / multiplier
						end




						local amount = tostring(inc)
						amount:gsub("%d+.","")
						amount = #amount
						perc = fixInt(perc,tonumber(amount))

						Label.Text = perc
						callback(perc, newSlider)

						Tween(Fill, TweenInfo.new(delayTw, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Size = UDim2.fromScale(Percent, 1) })
					until MouseDown == false
				end

				local event
				Label.Focused:Connect(function()
					Tween(newSlider.Frame.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 0})
					event = Label:GetPropertyChangedSignal("Text"):Connect(function()
						local inputText = tonumber(Label.Text)
						if inputText then
							if inputText <= max and inputText >= min then

								Tween(Fill, TweenInfo.new(delayTw, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Size = UDim2.fromScale(convertValueToScale(inputText), 1) })
								callback(inputText, newSlider)
							end
						end


					end)
				end)
				Label.FocusLost:Connect(function()
					Tween(newSlider.Frame.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 1})
				end)

				Trigger.MouseButton1Down:Connect(function()
					Tween(newSlider.Frame.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 0})
					Update()
				end)

				UserInputService.InputEnded:Connect(function(input)
					if Mainframe.Parent ~= nil and input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
						MouseDown = false
						Tween(newSlider.Frame.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 1})
					end
				end)



				newSlider.Frame.MouseEnter:Connect(function()
					Tween(newSlider.Frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.fromRGB(30,30,30)})
				end)

				newSlider.Frame.MouseLeave:Connect(function()
					Tween(newSlider.Frame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.fromRGB(20,20,20)})

				end)



				local Event

				newSlider.Frame.MouseEnter:Connect(function(x,y)
					if ShowInfo == true then
						InfoFrame.Visible = true

						InfoFrame.Title.Text = name
						InfoFrame.Description.Text = desc
						InfoFrame.Position = UDim2.fromOffset(x,y)

						Event = newSlider.Frame.MouseMoved:Connect(function(x,y)
							Tween(InfoFrame, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Position = UDim2.fromOffset(x,y)})
						end)
					end
				end)
				newSlider.Frame.MouseLeave:Connect(function()
					if ShowInfo == true then
						InfoFrame.Visible = false
						Event:Disconnect()
					end
				end)
			end

			function TAB:CreateDropdown(name, desc, tbl, callback)
				local newDropdown = ReservedTabs.Dropdown:Clone()

				local list = tbl.list
				local default = tbl.default

				local opened = false

				newDropdown.Name = name
				newDropdown.Visible = true
				newDropdown.Parent = newTab
				newDropdown.Frame.TextLabel.Text = name
				newDropdown.Frame.Select.Text = default

				local function Toggle()
					if opened == false then
						opened = true
						Tween(newDropdown.Frame.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 0})
						Tween(newDropdown.SelectionFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Size = UDim2.new(0, 92,0, 75) })
					elseif opened == true then
						opened = false
						Tween(newDropdown.Frame.UIStroke, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 1})
						Tween(newDropdown.SelectionFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Size = UDim2.new(0, 92,0, 0) })
					end
				end

				for i,v in ipairs(list) do
					local newOption = ReservedTabs.OptionDropdown:Clone()

					newOption.Name = v
					newOption.Parent = newDropdown.SelectionFrame.ScrollingFrame
					newOption.Text = v
					newOption.Visible = true

					newOption.MouseButton1Click:Connect(function()
						Toggle()
						newDropdown.Frame.Select.Text = v
						callback(v)
					end)

					newOption.MouseEnter:Connect(function()
						Tween(newOption, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.fromRGB(37,37,37)})
					end)
					newOption.MouseLeave:Connect(function()
						Tween(newOption, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { BackgroundColor3 = Color3.fromRGB(30,30,30)})
					end)
				end

				newDropdown.Frame.Select.MouseButton1Click:Connect(function()
					Toggle()
				end)

				local Event

				newDropdown.Frame.MouseEnter:Connect(function(x,y)
					if ShowInfo == true then
						InfoFrame.Visible = true

						InfoFrame.Title.Text = name
						InfoFrame.Description.Text = desc
						InfoFrame.Position = UDim2.fromOffset(x,y)

						Event = newDropdown.Frame.MouseMoved:Connect(function(x,y)
							Tween(InfoFrame, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Position = UDim2.fromOffset(x,y)})
						end)
					end
				end)
				newDropdown.Frame.MouseLeave:Connect(function()
					if ShowInfo == true then
						InfoFrame.Visible = false
						Event:Disconnect()
					end
				end)
			end


			return TAB
		end



		return LIBRARY

	end;
};

return require(G2L["111"]);
